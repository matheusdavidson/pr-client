{"version":3,"sources":["scripts/app-0aea4e8db8.js"],"names":["angular","module","directive","$app","templateUrl","toolbarTitleUrl","$menu","scope","company","controller","controllerAs","link","menu","toolbar","$rootScope","$mdBottomSheet","bootstrap","vm","this","$on","hide","showFilters","show","locals","disableParentScroll","then","service","$state","$http","$auth","$timeout","$user","$page","$window","setting","getStorageUser","JSON","parse","window","localStorage","getItem","slug","setStorageUser","user","setItem","stringify","removeStorageUser","removeItem","getStorageSession","setStorageSession","session","removeStorageSession","getCompanies","userInstance","roleForCompany","role","getCompany","userInstanceRoleCompany","length","User","params","alert","message","currentData","sessionData","init","prototype","extend","_id","gender","profile","current","firstName","toast","filterCompany","key","val","result","companies","forEach","row","destroy","set","removeToken","logout","load","done","$emit","getWorkPosition","companyid","position","profileUpdate","provider","_instance","_setting","$get","get","instance","data","title","value","_title","description","_description","ogLocale","_ogLocale","ogSiteName","_ogSiteName","ogTitle","_ogTitle","ogDescription","_ogDescription","ogUrl","_ogUrl","ogImage","_ogImage","ogSection","_ogSection","ogTag","_ogTag","status","$mdToast","msg","time","simple","content","hideDelay","progress","_config","homeEnabled","config","filter","replace","section","$scope","$element","parent","isOpen","toggle","toggleOpen","parentNode","classList","contains","heading","querySelector","firstChild","setAttribute","id","isSelected","state","doc","type","name","$1","toLowerCase","label","api","$mdSidenav","openedSection","currentPage","open","close","sections","mainMenu","selectSection","toggleSelectSection","isChildSectionSelected","isSectionSelected","selected","children","childSection","selectPage","page","currentSection","isPageSelected","toolbarMenu","main","push","setToolbar","$location","$User","enviroment","$login","constant","version","baseUrl","titleSeparator","copyright","google","clientId","language","facebook","appId","appSecret","https","redirWww","run","$templateCache","put"],"mappings":"CAAA,WACI,YACAA,SAAQC,OAAO,aACX,YACA,cACA,iBACA,6BAGR,WACI,YACAD,SAAQC,OAAO,aAAaC,UAAU,gBAAA,OAA8B,SAASC,GACzE,OACIC,YAAa,WACT,MAAOD,GAAKE,wBAK5B,WACI,YACAL,SAAQC,OAAO,aAAaC,UAAU,eAAA,QAA6B,SAAqBI,GACpF,OACIF,YAAa,kDACbG,OACIC,QAAS,KAEbC,WAAY,kBACZC,aAAc,KACdC,KAAM,SAASJ,GACXA,EAAMK,KAAON,EAAMO,gBAKnC,WACI,YACAb,SAAQC,OAAO,aAAaQ,WAAW,mBAAA,aAAA,iBAAiC,SAASK,EAAYC,GA8BzF,QAASC,MA7BT,GAAIC,GAAKC,IACTJ,GAAWK,IAAI,gBAAiB,WAC5BJ,EAAeK,SAEnBN,EAAWK,IAAI,mBAAoB,WAC/BJ,EAAeK,SAEnBH,EAAGI,YAAc,WACbN,EAAeO,MACXlB,YAAa,gDACbK,WAAY,mBACZC,aAAc,KAGda,UAGAC,qBAAqB,IACtBC,KAAK,eASZT,UAKR,WACI,YACAhB,SAAQC,OAAO,aAAaC,UAAU,SAAwB,WAC1D,OACIE,YAAa,6CAIzB,WACI,YACAJ,SAAQC,OAAO,aAAc,kBAEjC,WACI,YAEAD,SAAQC,OAAO,aAAayB,QAAQ,SAAA,aAAA,SAAA,QAAA,QAAA,WAAA,QAAA,QAAA,QAAA,UAAA,UAAuB,SAASZ,EAAYa,EAAQC,EAAOC,EAAOC,EAAUC,EAAOzB,EAAO0B,EAAOC,EAASC,GAgM1I,QAASC,KACL,MAAOC,MAAKC,MAAMC,OAAOC,aAAaC,QAAQN,EAAQO,KAAO,UAGjE,QAASC,GAAeC,GACpB,MAAOL,QAAOC,aAAaK,QAAQV,EAAQO,KAAO,QAASL,KAAKS,UAAUF,IAG9E,QAASG,KACLR,OAAOC,aAAaQ,WAAWb,EAAQO,KAAO,SAC9CH,OAAOC,aAAaQ,WAAWb,EAAQO,KAAO,kBAGlD,QAASO,KACL,MAAOZ,MAAKC,MAAMC,OAAOC,aAAaC,QAAQN,EAAQO,KAAO,aAGjE,QAASQ,GAAkBC,GACvB,MAAOZ,QAAOC,aAAaK,QAAQV,EAAQO,KAAO,WAAYL,KAAKS,UAAUK,IAGjF,QAASC,KACLb,OAAOC,aAAaQ,WAAWb,EAAQO,KAAO,YAC9CH,OAAOC,aAAaQ,WAAWb,EAAQO,KAAO,QAGlD,QAASW,GAAaC,GAClB,GAAIC,IAAiB,CAErB,OADoC,QAAhCvB,EAAMG,QAAQoB,iBAA0BA,EAAiBvB,EAAMG,QAAQoB,gBACpEA,GAAkBD,EAAaC,GAAkBD,EAAaC,GAAgBC,KAAOF,EAAaE,KAG7G,QAASC,GAAWH,GAChBA,EAAeA,EAAeA,EAAenC,IAC7C,IAAIoC,IAAiB,EACjBG,EAA0BJ,GAAgBA,EAAaE,MAAQF,EAAaE,KAAKG,QAAUL,EAAaE,KAAK,GAAG/C,QAAU6C,EAAaE,KAAK,GAAG/C,SAAU,CAE7J,OADoC,QAAhCuB,EAAMG,QAAQoB,iBAA0BA,EAAiBvB,EAAMG,QAAQoB,gBACpEA,EAAiBD,EAAaC,GAAgBC,KAAK,GAAG/C,QAAUiD,EA3N3E,GAAIE,GAAO,SAASC,EAAQC,EAAOC,GAQ3BF,EAASA,EAASA,KAQlB1C,KAAK6C,eAQL7C,KAAK8C,eACL9C,KAAK+C,KAAKL,EAAQC,EAAOC,GAoMjC,OAxLAH,GAAKO,UAAUD,KAAO,SAASL,EAAQC,EAAOC,GAK1C,GAHsB,gBAAXF,IACP5D,QAAQmE,OAAOjD,KAAM0C,GAErBA,EAAOQ,IAAK,CACZ,GAAIC,GAAUT,EAAOU,SAAqC,MAA1BV,EAAOU,QAAQD,OAAkB,IAAM,IACnEf,GAAiB,CACe,SAAhCvB,EAAMG,QAAQoB,iBAA0BA,EAAiBvB,EAAMG,QAAQoB,iBACvEA,GAAkBM,EAAON,GAAgBC,KAAOK,EAAON,GAAgBC,KAAKG,OAASE,EAAOL,KAAKG,UACjGxC,KAAKqD,QAAQ,UAAWf,EAAWtC,OACnCA,KAAKqD,QAAQ,YAAanB,EAAalC,QAEtC4C,IAASA,EAAU,OAASF,EAAOU,QAAQE,UAAY,0BAA4BH,EAAS,cAC7FR,GAAO7B,EAAMyC,MAAMX,EAAS,KAC5B5C,KAAKgC,QAAQ,YAAchC,KAAKgC,QAAQ,WAAWkB,KACnDlD,KAAKqD,QAAQ,UAAWrD,KAAKwD,cAAcxD,KAAKgC,QAAQ,WAAWkB,MAEvE1B,EAAekB,OAGf,IADAA,EAASzB,IACG,MAAOjB,MAAK+C,KAAKL,EAEjC,QAAO,GAiBXD,EAAKO,UAAUK,QAAU,SAASI,EAAKC,GACnC,GAAID,GAAOC,EACF1D,KAAK6C,cAAa7C,KAAK6C,gBAC5B7C,KAAK6C,YAAYY,GAAOC,MACrB,IAAID,EACP,MAAOzD,MAAK6C,aAAe7C,KAAK6C,YAAYY,GAAOzD,KAAK6C,YAAYY,IAAO,CAE/E,OAAOzD,MAAK6C,aAWhBJ,EAAKO,UAAUhB,QAAU,SAASyB,EAAKC,GACnC,GAAID,GAAOC,EACF1D,KAAK8C,cAAa9C,KAAK8C,gBAC5B9C,KAAK8C,YAAYW,GAAOC,EACxB3B,EAAkB/B,KAAK8C,iBACpB,IAAIW,EAEP,MADAzD,MAAK8C,YAAchB,IACZ9B,KAAK8C,aAAe9C,KAAK8C,YAAYW,GAAOzD,KAAK8C,YAAYW,IAAO,CAG/E,OADAzD,MAAK8C,YAAchB,IACZ9B,KAAK8C,aAYhBL,EAAKO,UAAUQ,cAAgB,SAASN,GACpC,GAAIS,IAAS,EACTC,EAAY1B,EAAalC,KAS7B,OARI4D,IAAaA,EAAUpB,QACvBoB,EAAUC,QAAQ,SAASC,GACvB,MAAIA,GAAIxE,QAAQ4D,MAAQA,OACpBS,EAASG,EAAIxE,SADjB,SAMDqE,GAWXlB,EAAKO,UAAUe,QAAU,SAASpB,GAC9B9B,EAAMmD,QACN/B,IACAL,IACAjB,EAAMsD,cACNtD,EAAMuD,SACNpD,EAAMqD,KAAKC,OACPzB,GAAO7B,EAAMyC,MAAM,YAAa,KACpC3D,EAAWyE,MAAM,cAWrB5B,EAAKO,UAAUsB,gBAAkB,SAASC,GACtC,GAAIZ,IAAS,EACTC,EAAY1B,EAAalC,KAS7B,OARI4D,GAAUpB,QACVoB,EAAUC,QAAQ,SAASC,GACvB,MAAIA,GAAIxE,QAAQ4D,MAAQqB,OACpBZ,EAASG,EAAIU,UADjB,SAMDb,GAEXlB,EAAKO,UAAUyB,cAAgB,SAASrB,GACpCpD,KAAKoD,QAAUA,EACf5B,EAAexB,OAEnByC,EAAKO,UAAUV,WAAaA,EAC5BG,EAAKO,UAAUd,aAAeA,EA6CvBO,QAKf,WACI,YACA3D,SAAQC,OAAO,aAAa2F,SAAS,QAQjC,WAQI1E,KAAK2E,UAAY,KAQjB3E,KAAK4E,YAgBL5E,KAAK6E,KAAO7E,KAAK8E,IAAM,WACnB,OACIC,SAAU,WACN,MAAO/E,MAAK2E,WAEhB3D,QAAShB,KAAK4E,SAiBdZ,IAAK,SAASgB,GAEV,MADAhF,MAAK2E,UAAYK,EACVA,GAkBXjB,QAAS,WACL/D,KAAK2E,UAAY,QAI7B3E,KAAKgB,QAAU,SAASyC,EAAKC,GACzB,MAAID,IAAOC,EAAY1D,KAAK4E,SAASnB,GAAOC,EACnCD,EAAYzD,KAAK4E,SAASnB,GACvBzD,KAAK4E,eAIjC,WACI,YACA9F,SAAQC,OAAO,aAAa2F,SAAS,QAQjC,WA4JI,QAASO,GAAMC,GACX,MAAIA,GAAclF,KAAKmF,OAASD,EACpBlF,KAAKmF,OAUrB,QAASC,GAAYF,GACjB,MAAIA,GAAclF,KAAKqF,aAAeH,EAC1BlF,KAAKqF,aAUrB,QAASC,GAASJ,GACd,MAAIA,GAAclF,KAAKuF,UAAYL,EACvBlF,KAAKuF,UAUrB,QAASC,GAAWN,GAChB,MAAIA,GAAclF,KAAKyF,YAAcP,EACzBlF,KAAKyF,YAUrB,QAASC,GAAQR,GACb,MAAIA,GAAclF,KAAK2F,SAAWT,EACtBlF,KAAK2F,SAUrB,QAASC,GAAcV,GACnB,MAAIA,GAAclF,KAAK6F,eAAiBX,EAC5BlF,KAAK6F,eAUrB,QAASC,GAAMZ,GACX,MAAIA,GAAclF,KAAK+F,OAASb,EACpBlF,KAAK+F,OAUrB,QAASC,GAAQd,GACb,MAAIA,GAAclF,KAAKiG,SAAWf,EACtBlF,KAAKiG,SAUrB,QAASC,GAAUhB,GACf,MAAIA,GAAclF,KAAKmG,WAAajB,EACxBlF,KAAKmG,WAUrB,QAASC,GAAMlB,GACX,MAAIA,GAAclF,KAAKqG,OAASnB,EACpBlF,KAAKqG,OAUrB,QAASlC,KACL,OACIpB,KAAM,WACF/C,KAAKsG,QAAS,GAGlBlC,KAAM,WACFpE,KAAKsG,QAAS,IAe1B,QAAS/C,GAAMgD,GACX,MAAO,UAASC,EAAKC,EAAMjC,GACvBiC,EAAOA,EAAOA,EAAO,IACrBF,EAASnG,KAAKmG,EAASG,SAASC,QAAQH,GAAKhC,SAASA,EAAWA,EAAW,gBAAgBoC,UAAUH,KAI9G,QAASI,KACL,OACI9D,KAAM,WACF/C,KAAKsG,QAAS,GAGlBlC,KAAM,WACFpE,KAAKsG,QAAS,IAhT1BtG,KAAK8G,SAEDC,aAAe,GAUnB/G,KAAKmF,OAAS,GAQdnF,KAAKqF,aAAe,GAQpBrF,KAAKyF,YAAc,GAQnBzF,KAAK2F,SAAW,GAQhB3F,KAAK6F,eAAiB,GAQtB7F,KAAK+F,OAAS,GAQd/F,KAAKiG,SAAW,GAQhBjG,KAAKmG,WAAa,GAQlBnG,KAAKqG,OAAS,GAiBdrG,KAAK6E,KAAO7E,KAAK8E,KAAA,WAAoB,SAASyB,GAC1C,OACIS,OAAQhH,KAAK8G,QACb3C,KAAMA,IACN0C,SAAUA,IACVtD,MAAOA,EAAMgD,GACbtB,MAAOA,EACPG,YAAaA,EACbE,SAAUA,EACVE,WAAYA,EACZE,QAASA,EACTE,cAAeA,EACfE,MAAOA,EACPE,QAASA,EACTE,UAAWA,EACXE,MAAOA,KAqBfpG,KAAKgH,OAAS,SAASvD,EAAKC,GACxB,MAAID,KAAQC,GAAOA,KAAQ,GAChB1D,KAAK8G,QAAQrD,GAAOC,EACpBD,EACAzD,KAAK8G,QAAQrD,GAEbzD,KAAK8G,cAiLhC,WACI,YACAhI,SAAQC,OAAO,aAAc,YAAa,gBAE9C,WACI,YACAD,SAAQC,OAAO,aAAakI,OAAO,UAAyB,WACxD,MAAO,UAAS/B,GACZ,MAASA,GAAcA,EAAMgC,QAAQ,KAAM,IAAzB,SAI9B,WACI,YACApI,SAAQC,OAAO,aAAaC,UAAU,aAA4B,WAC9D,OACIK,OACI8H,QAAS,KAEbjI,YAAa,yCACbO,KAAM,SAAS2H,EAAQC,GACnB,GAAI9H,GAAa8H,EAASC,SAAS/H,YACnC6H,GAAOG,OAAS,WACZ,MAAOhI,GAAWG,KAAK6H,OAAOH,EAAOD,UAEzCC,EAAOI,OAAS,WACZjI,EAAWG,KAAK+H,WAAWL,EAAOD,SAEtC,IAAIO,GAAaL,EAAS,GAAGK,WAAWA,WAAWA,UACnD,IAAIA,EAAWC,UAAUC,SAAS,oBAAqB,CACnD,GAAIC,GAAUH,EAAWI,cAAc,KACvCT,GAAS,GAAGU,WAAWC,aAAa,mBAAoBH,EAAQI,YAMpF,WACI,YACAnJ,SAAQC,OAAO,aAAaC,UAAU,WAA0B,WAC5D,OACIK,OACI8H,QAAS,KAEb5H,WAAY,eACZC,aAAc,KACdN,YAAa,uCACbO,KAAM,SAAS2H,EAAQC,GACnB,GAAI9H,GAAa8H,EAASC,SAAS/H,YACnC6H,GAAOc,WAAa,WAChB,MAAO3I,GAAWG,KAAOH,EAAWG,KAAKwI,WAAWd,EAAOD,SAAW,WAM1F,WACI,YACArI,SAAQC,OAAO,aAAaQ,WAAW,gBAAA,SAA8B,SAASkB,GAC1E,GAAIV,GAAKC,IACTD,GAAGoI,MAAQ1H,QAGnB,WACI,YACA3B,SAAQC,OAAO,aAAakI,OAAO,YAA2B,WAC1D,MAAO,UAASmB,GACZ,MAAKA,GACY,cAAbA,EAAIC,KACGD,EAAIE,KAAKpB,QAAQ,WAAY,SAASqB,GACzC,MAAO,IAAMA,EAAGC,gBAGjBJ,EAAIK,OAASL,EAAIE,KANxB,aAUZ,WACI,YACAxJ,SAAQC,OAAO,aAAa2F,SAAS,QAQjC,WAmGI,QAASgE,GAAI3D,EAAUnF,EAAY+I,GAC/B,MAAO,YACH,OACIC,eAAe,EACfC,YAAa,KACbC,KAAM,WACFlJ,EAAWyE,MAAM,iBACjBsE,EAAW,QAAQG,QAEvBC,MAAO,WACHnJ,EAAWyE,MAAM,iBACjBsE,EAAW,QAAQI,SAGvBC,SAAUjE,EAASkE,SACnBC,cAAe,SAAS/B,GACpBnH,KAAK4I,cAAgBzB,GAEzBgC,oBAAqB,SAAShC,GAC1BnH,KAAK4I,cAAiB5I,KAAK4I,gBAAkBzB,GAAU,EAAQA,GAEnEiC,uBAAwB,SAASjC,GAC7B,MAAOnH,MAAK4I,gBAAkBzB,GAElCkC,kBAAmB,SAASlC,GACxB,GAAImC,IAAW,EACXV,EAAgB5I,KAAK4I,aAUzB,OATIA,KAAkBzB,EAClBmC,GAAW,EACJnC,EAAQoC,UACfpC,EAAQoC,SAAS1F,QAAQ,SAAS2F,GAC1BA,IAAiBZ,IACjBU,GAAW,KAIhBA,GAEXG,WAAY,SAAStC,EAASuC,GAE1B1J,KAAK2J,eAAiBxC,EACtBnH,KAAK6I,YAAca,GAEvBE,eAAgB,SAASF,GACrB,MAAO1J,MAAK6I,cAAgBa,GAEhCnC,OAAQ,SAASJ,GACb,MAAOnH,MAAKqJ,kBAAkBlC,IAElCM,WAAY,SAASN,GACjB,MAAOnH,MAAKmJ,oBAAoBhC,IAEpCe,WAAY,SAASwB,GACjB,MAAO1J,MAAK4J,eAAeF,MAvJ3C,GAAI3E,GAAW/E,IAQfA,MAAKiJ,YAQLjJ,KAAK6J,eAgBL7J,KAAK6E,KAAO7E,KAAK8E,KAAA,aAAA,aAAoB,SAASlF,EAAY+I,GACtD,OACImB,KAAM9J,KAAKiJ,SACXtJ,QAASK,KAAK6J,YACdnB,IAAKA,EAAI3D,EAAUnF,EAAY+I,MAuBvC3I,KAAKgE,IAAM,SAAStE,GAChBM,KAAKiJ,SAASc,KAAKrK,IAsBvBM,KAAKgK,WAAa,SAAStK,GACvBM,KAAK6J,YAAYE,KAAKrK,SAuKtC,WACI,YACAZ,SAAQC,OAAO,aAAaiI,OAAsB,iBAEtD,WACI,YACAlI,SAAQC,OAAO,YACX,YACA,YACA,UACA,aACA,aACA,SACA,aACA,cACA,+BACA,YACA,aACA,SACA,cAIA,YAEA,iBAMR,WACI,YAsBAD,SAAQC,OAAO,YAAYQ,WAAW,YAAA,UAAA,aAAA,SAAA,SAAA,YAAA,aAAA,WAAA,QAAA,QAAA,QAAA,QAAA,aAAA,QAAA,SAAA,OAA0B,SAASyB,EAASpB,EAAYwH,EAAQ3G,EAAQwJ,EAAWtB,EAAY/H,EAAUD,EAAOG,EAAOoJ,EAAOrJ,EAAOsJ,EAAY/K,EAAOgL,EAAQnL,UAgO1M,WACIH,QAAQC,OAAO,kBAAmBsL,SAAS,WACvC/B,KAAM,UACN/G,KAAM,UACN+I,QAAS,QACTrF,MAAO,UACPsF,QAAS,GACTC,eAAgB,MAChBpF,YAAa,UACbqF,UAAW,UACXC,QACIC,SAAU,GACVC,SAAU,SAEdC,UACIxL,MAAO,QACPyL,MAAO,GACPC,UAAW,GACXH,SAAU,SAEdI,SACAC,UAAU,EACV3F,SAAU,QACVE,WAAY,UACZE,QAAS,UACTE,cAAe,UACfE,MAAO,GACPE,QAAS,GACTE,UAAW,UACXE,MAAO,eAGf,WACI,YACAtH,SAAQC,OAAO,UACX,gBAcRD,QAAQC,OAAO,UAAUmM,KAAK,iBAAkB,SAASC,GAAiBA,EAAeC,IAAI,6BAA6B,kkFAC1HD,EAAeC,IAAI,qBAAqB,ijFACxCD,EAAeC,IAAI,kCAAkC,wTACrDD,EAAeC,IAAI,oCAAoC,ywBACvDD,EAAeC,IAAI,iCAAiC,yhEACpDD,EAAeC,IAAI,uCAAuC,gJAC1DD,EAAeC,IAAI,yCAAyC,mpBAC5DD,EAAeC,IAAI,kDAAkD,2IACrED,EAAeC,IAAI,oDAAoD","file":"scripts/app-0aea4e8db8.js","sourcesContent":["(function() {\n    'use strict';\n    angular.module('core.page', [\n        'core.menu',\n        'anim-in-out',\n        'ui.utils.masks',\n        'directives.inputMatch'\n    ]);\n})();\n(function() {\n    'use strict';\n    angular.module('core.page').directive('toolbarTitle', /*@ngInject*/ function($app) {\n        return {\n            templateUrl: function() {\n                return $app.toolbarTitleUrl;\n            }\n        }\n    });\n})();\n(function() {\n    'use strict';\n    angular.module('core.page').directive('toolbarMenu', /*@ngInject*/ function toolbarMenu($menu) {\n        return {\n            templateUrl: \"app/core/page/toolbar/menu/toolbarMenu.tpl.html\",\n            scope: {\n                company: '='\n            },\n            controller: 'ToolbarMenuCtrl',\n            controllerAs: 'vm',\n            link: function(scope) {\n                scope.menu = $menu.toolbar;\n            }\n        }\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('core.page').controller('ToolbarMenuCtrl', /*@ngInject*/ function($rootScope, $mdBottomSheet) {\n        var vm = this;\n        $rootScope.$on('AppMenuOpened', function() {\n            $mdBottomSheet.hide();\n        });\n        $rootScope.$on('CompanyIdUpdated', function() {\n            $mdBottomSheet.hide();\n        });\n        vm.showFilters = function() {\n            $mdBottomSheet.show({\n                templateUrl: 'app/finder/filter/finderFilterMobile.tpl.html',\n                controller: 'FinderFilterCtrl',\n                controllerAs: 'vm',\n                //targetEvent: $event,\n                //parent: '.finder-wrapper',\n                locals: {},\n                //scope: ''\n                //preserveScope: true,\n                disableParentScroll: false\n            }).then(function() {});\n        }\n        //\n        // Events\n        //\n        //\n        // Bootstrap\n        //\n        //\n        bootstrap();\n\n        function bootstrap() {}\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('core.page').directive('loader', /*@ngInject*/ function() {\n        return {\n            templateUrl: \"app/core/page/loader/loader.tpl.html\",\n        }\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('core.user', ['satellizer']);\n})();\n(function() {\r\n    'use strict';\r\n    /* global window */\r\n    angular.module('core.user').service('$User', /*@ngInject*/ function($rootScope, $state, $http, $auth, $timeout, $user, $menu, $page, $window, setting) {\r\n        /**\r\n         * @ngdoc service\r\n         * @name core.user.service:$User\r\n         * @description\r\n         * Model de usuário\r\n         * @param {object} params propriedades da instância\r\n         * @param {bool} alert aviso de boas vindas\r\n         * @param {string} message mensagem do aviso\r\n         **/\r\n        var User = function(params, alert, message) {\r\n                /**\r\n                 * @ngdoc object\r\n                 * @name core.user.service:$User#params\r\n                 * @propertyOf core.user.service:$User\r\n                 * @description\r\n                 * Propriedades da instância\r\n                 **/\r\n                params = params ? params : {};\r\n                /**\r\n                 * @ngdoc object\r\n                 * @name core.user.service:$User#currentData\r\n                 * @propertyOf core.user.service:$User\r\n                 * @description\r\n                 * Armazena dados customizados na instância do usuário\r\n                 **/\r\n                this.currentData = {};\r\n                /**\r\n                 * @ngdoc object\r\n                 * @name core.user.service:$User#sessionData\r\n                 * @propertyOf core.user.service:$User\r\n                 * @description\r\n                 * Armazena dados customizados no localStorage do usuário\r\n                 **/\r\n                this.sessionData = {};\r\n                this.init(params, alert, message);\r\n            }\r\n            /**\r\n             * @ngdoc function\r\n             * @name core.user.service:$User:init\r\n             * @methodOf core.user.service:$User\r\n             * @description\r\n             * Inicialização\r\n             * @param {object} params propriedades da instância\r\n             * @param {bool} alert aviso de boas vindas\r\n             * @param {string} message mensagem do aviso\r\n             */\r\n        User.prototype.init = function(params, alert, message) {\r\n            //set params\r\n            if (typeof params === 'object') {\r\n                angular.extend(this, params);\r\n            }\r\n            if (params._id) {\r\n                var gender = (params.profile && params.profile.gender === 'F') ? 'a' : 'o',\r\n                    roleForCompany = false;\r\n                if ($user.setting.roleForCompany != 'user') roleForCompany = $user.setting.roleForCompany;\r\n                if (roleForCompany && params[roleForCompany].role ? params[roleForCompany].role.length : params.role.length) {\r\n                    this.current('company', getCompany(this));\r\n                    this.current('companies', getCompanies(this));\r\n                }\r\n                if (!message) message = 'Olá ' + params.profile.firstName + ', você entrou. Bem vind' + gender + ' de volta.';\r\n                if (alert) $page.toast(message, 10000);\r\n                if (this.session('company') && this.session('company')._id) {\r\n                    this.current('company', this.filterCompany(this.session('company')._id));\r\n                }\r\n                setStorageUser(params);\r\n            } else {\r\n                params = getStorageUser();\r\n                if (params) return this.init(params);\r\n            }\r\n            return false;\r\n        }\r\n        /**\r\n         * @ngdoc function\r\n         * @name core.user.service:$User:current\r\n         * @methodOf core.user.service:$User\r\n         * @description\r\n         * Adiciona informações customizadas no formato chave:valor à instância corrente do usuário\r\n         * @example\r\n         * <pre>\r\n         * var user = new $User();\r\n         * user.current('company',{_id: 123456, name: 'CocaCola'})\r\n         * console.log(user.current('company')) //prints {_id: 123456, name: 'CocaCola'}\r\n         * </pre>\r\n         * @param {string} key chave\r\n         * @param {*} val valor\r\n         */\r\n        User.prototype.current = function(key, val) {\r\n            if (key && val) {\r\n                if (!this.currentData) this.currentData = {};\r\n                this.currentData[key] = val;\r\n            } else if (key) {\r\n                return this.currentData && this.currentData[key] ? this.currentData[key] : false;\r\n            }\r\n            return this.currentData;\r\n        }\r\n        /**\r\n         * @ngdoc function\r\n         * @name core.user.service:$User:session\r\n         * @methodOf core.user.service:$User\r\n         * @description\r\n         * Adiciona informações customizadas no formato chave:valor à instância corrente do usuário e ao localStorage\r\n         * @param {string} key chave\r\n         * @param {*} val valor\r\n         */\r\n        User.prototype.session = function(key, val) {\r\n            if (key && val) {\r\n                if (!this.sessionData) this.sessionData = {};\r\n                this.sessionData[key] = val;\r\n                setStorageSession(this.sessionData);\r\n            } else if (key) {\r\n                this.sessionData = getStorageSession();\r\n                return this.sessionData && this.sessionData[key] ? this.sessionData[key] : false;\r\n            }\r\n            this.sessionData = getStorageSession();\r\n            return this.sessionData;\r\n        }\r\n\r\n        /**\r\n         * @ngdoc function\r\n         * @name core.user.service:$User:filterCompany\r\n         * @methodOf core.user.service:$User\r\n         * @description\r\n         * Buscar uma empresa\r\n         * @param {string} _id id da empresa\r\n         * @return {object} objeto da empresa\r\n         */\r\n        User.prototype.filterCompany = function(_id) {\r\n            var result = false,\r\n                companies = getCompanies(this);\r\n            if (companies && companies.length) {\r\n                companies.forEach(function(row) {\r\n                    if (row.company._id === _id) {\r\n                        result = row.company;\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n\r\n        /**\r\n         * @ngdoc function\r\n         * @name core.user.service:$User:destroy\r\n         * @methodOf core.user.service:$User\r\n         * @description\r\n         * Destruir sessão do usuário\r\n         * @param {bool} alert mensagem de aviso (você saiu)\r\n         */\r\n        User.prototype.destroy = function(alert) {\r\n            $user.set({});\r\n            removeStorageSession();\r\n            removeStorageUser();\r\n            $auth.removeToken();\r\n            $auth.logout();\r\n            $page.load.done();\r\n            if (alert) $page.toast('Você saiu', 3000);\r\n            $rootScope.$emit('$UserLeft');\r\n        }\r\n        /**\r\n         * @ngdoc function\r\n         * @name core.user.service:$User:getWorkPosition\r\n         * @methodOf core.user.service:$User\r\n         * @description\r\n         * Obter a lista de cargos (@todo migrar para aplicações filhas)\r\n         * @param {string} companyid id da empresa\r\n         * @return {array} lista de cargos desejados\r\n         */\r\n        User.prototype.getWorkPosition = function(companyid) {\r\n            var result = false,\r\n                companies = getCompanies(this);\r\n            if (companies.length) {\r\n                companies.forEach(function(row) {\r\n                    if (row.company._id === companyid) {\r\n                        result = row.position;\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n        User.prototype.profileUpdate = function(profile) {\r\n            this.profile = profile;\r\n            setStorageUser(this);\r\n        }\r\n        User.prototype.getCompany = getCompany;\r\n        User.prototype.getCompanies = getCompanies;\r\n\r\n        function token() {\r\n            return $auth.getToken();\r\n        }\r\n\r\n        function getStorageUser() {\r\n            return JSON.parse(window.localStorage.getItem(setting.slug + '.user'));\r\n        }\r\n\r\n        function setStorageUser(user) {\r\n            return window.localStorage.setItem(setting.slug + '.user', JSON.stringify(user));\r\n        }\r\n\r\n        function removeStorageUser() {\r\n            window.localStorage.removeItem(setting.slug + '.user');\r\n            window.localStorage.removeItem(setting.slug + '.session_token');\r\n        }\r\n\r\n        function getStorageSession() {\r\n            return JSON.parse(window.localStorage.getItem(setting.slug + '.session'));\r\n        }\r\n\r\n        function setStorageSession(session) {\r\n            return window.localStorage.setItem(setting.slug + '.session', JSON.stringify(session));\r\n        }\r\n\r\n        function removeStorageSession() {\r\n            window.localStorage.removeItem(setting.slug + '.session');\r\n            window.localStorage.removeItem(setting.slug + '.app');\r\n        }\r\n\r\n        function getCompanies(userInstance) {\r\n            var roleForCompany = false;\r\n            if ($user.setting.roleForCompany != 'user') roleForCompany = $user.setting.roleForCompany;\r\n            return roleForCompany && userInstance[roleForCompany] ? userInstance[roleForCompany].role : userInstance.role;\r\n        }\r\n\r\n        function getCompany(userInstance) {\r\n            userInstance = userInstance ? userInstance : this;\r\n            var roleForCompany = false;\r\n            var userInstanceRoleCompany = userInstance && userInstance.role && userInstance.role.length && userInstance.role[0].company ? userInstance.role[0].company : false;\r\n            if ($user.setting.roleForCompany != 'user') roleForCompany = $user.setting.roleForCompany;\r\n            return roleForCompany ? userInstance[roleForCompany].role[0].company : userInstanceRoleCompany;\r\n        }\r\n        return User;\r\n    })\r\n\r\n\r\n})();\n(function() {\n    'use strict';\n    angular.module('core.user').provider('$user',\n        /**\n         * @ngdoc object\n         * @name core.user.$userProvider\n         * @description\n         * 2 em 1 - provém configurações e a factory (ver $get) com estados/comportamentos de usuário.\n         **/\n        /*@ngInject*/\n        function $userProvider() {\n            /**\n             * @ngdoc object\n             * @name core.user.$userProvider#_instance\n             * @propertyOf core.user.$userProvider\n             * @description\n             * Instância de usuário armazenada pelo {@link core.user.service:$User serviço}\n             **/\n            this._instance = null;\n            /**\n             * @ngdoc object\n             * @name core.user.$userProvider#_setting\n             * @propertyOf core.user.$userProvider\n             * @description\n             * Armazena configurações\n             **/\n            this._setting = {};\n            /**\n             * @ngdoc function\n             * @name core.user.$userProvider#$get\n             * @propertyOf core.user.$userProvider\n             * @description\n             * getter que vira factory pelo angular para se tornar injetável em toda aplicação\n             * @example\n             * <pre>\n             * angular.module('myApp.module').controller('MyCtrl', function($user) {\n             *      console.log($user.setting.roleForCompany);\n             *      //printa a regra para empresa\n             * })\n             * </pre>\n             * @return {object} objeto correspondente a uma Factory\n             **/\n            this.$get = this.get = function() {\n                return {\n                    instance: function() {\n                        return this._instance;\n                    },\n                    setting: this._setting,\n                    /**\n                     * @ngdoc function\n                     * @name core.user.$userProvider#set\n                     * @methodOf core.user.$userProvider\n                     * @description\n                     * Setar instância do usuário\n                     * @example\n                     * <pre>\n                     * var user = new $User();\n                     * $user.set(user);\n                     * //now user instance can be injectable\n                     * angular.module('myApp').controller('myCtrl',function($user){\n                     * console.log($user.instance()) //imprime objeto de instância do usuário\n                     * })\n                     * </pre>\n                     **/\n                    set: function(data) {\n                        this._instance = data;\n                        return data;\n                    },\n                    /**\n                     * @ngdoc function\n                     * @name core.user.$userProvider#destroy\n                     * @methodOf core.user.$userProvider\n                     * @description\n                     * Apagar instância do usuário\n                     * @example\n                     * <pre>\n                     * var user = new $User();\n                     * $user.set(user);\n                     * //now user instance can be injectable\n                     * angular.module('myApp').controller('myCtrl',function($user){\n                     * $user.instance().destroy() //apaga instância do usuário\n                     * })\n                     * </pre>\n                     **/\n                    destroy: function() {\n                        this._instance = null;\n                    }\n                }\n            }\n            this.setting = function(key, val) {\n                if (key && val) return this._setting[key] = val;\n                else if (key) return this._setting[key];\n                else return this._setting;\n            }\n        })\n})();\n(function() {\n    'use strict';\n    angular.module('core.page').provider('$page',\n        /**\n         * @ngdoc object\n         * @name core.page.$pageProvider\n         * @description\n         * Provém configurações/comportamentos/estados para página\n         **/\n        /*@ngInject*/\n        function $pageProvider() {\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_config\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena configurações\n             **/\n            this._config = {\n                // configuração para ativar/desativar a rota inicial\n                'homeEnabled': true\n            };\n\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_title\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena o título\n             **/\n            this._title = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_description\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena a descrição\n             **/\n            this._description = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogSiteName\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph site name\n             **/\n            this._ogSiteName = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogTitle\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph title\n             **/\n            this._ogTitle = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogDescription\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph description\n             **/\n            this._ogDescription = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogUrl\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph url\n             **/\n            this._ogUrl = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogImage\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph image\n             **/\n            this._ogImage = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogSection\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph section\n             **/\n            this._ogSection = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogTag\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph tags\n             **/\n            this._ogTag = '';\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#$get\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * getter que vira factory pelo angular para se tornar injetável em toda aplicação\n             * @example\n             * <pre>\n             * angular.module('myApp.module').controller('MyCtrl', function($page) {\n             *      console.log($page.config('myOwnConfiguration'));\n             *      //prints the current config\n             *      //ex.: \"{ configA: 54, configB: '=D' }\"\n             * })\n             * </pre>\n             * @return {object} Retorna um objeto contendo valores das propriedades.\n             **/\n            this.$get = this.get = /*@ngInject*/ function($mdToast) {\n                return {\n                    config: this._config,\n                    load: load(),\n                    progress: progress(),\n                    toast: toast($mdToast),\n                    title: title,\n                    description: description,\n                    ogLocale: ogLocale,\n                    ogSiteName: ogSiteName,\n                    ogTitle: ogTitle,\n                    ogDescription: ogDescription,\n                    ogUrl: ogUrl,\n                    ogImage: ogImage,\n                    ogSection: ogSection,\n                    ogTag: ogTag\n                }\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#config\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/setter para configurações\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($pageProvider) {\n             *     $pageProvider.config('myOwnConfiguration', {\n             *          configA: 54,\n             *          configB: '=D'\n             *      })\n             * })\n             * </pre>\n             * @param {string} key chave\n             * @param {*} val valor\n             **/\n            this.config = function(key, val) {\n                if (key && (val || val === false)) {\n                    return this._config[key] = val\n                } else if (key) {\n                    return this._config[key]\n                } else {\n                    return this._config\n                }\n            }\n\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#title\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para meta tag título\n             * @param {string} str título da página\n             * @return {string} título da página\n             **/\n            function title(value) {\n                if (value) return this._title = value;\n                else return this._title;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#description\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para meta tag descrição\n             * @param {string} value descrição da página\n             **/\n            function description(value) {\n                if (value) return this._description = value;\n                else return this._description;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogLocale\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph locale\n             * @param {string} value locale\n             **/\n            function ogLocale(value) {\n                if (value) return this._ogLocale = value;\n                else return this._ogLocale;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogSiteName\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph site name\n             * @param {string} value site name\n             **/\n            function ogSiteName(value) {\n                if (value) return this._ogSiteName = value;\n                else return this._ogSiteName;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogTitle\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph title\n             * @param {string} value title\n             **/\n            function ogTitle(value) {\n                if (value) return this._ogTitle = value;\n                else return this._ogTitle;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogDescription\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph description\n             * @param {string} value description\n             **/\n            function ogDescription(value) {\n                if (value) return this._ogDescription = value;\n                else return this._ogDescription;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogUrl\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph url\n             * @param {string} value url\n             **/\n            function ogUrl(value) {\n                if (value) return this._ogUrl = value;\n                else return this._ogUrl;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogImage\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph image\n             * @param {string} value image\n             **/\n            function ogImage(value) {\n                if (value) return this._ogImage = value;\n                else return this._ogImage;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogSection\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph section\n             * @param {string} value section\n             **/\n            function ogSection(value) {\n                if (value) return this._ogSection = value;\n                else return this._ogSection;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogTag\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph tag\n             * @param {string} value tag\n             **/\n            function ogTag(value) {\n                if (value) return this._ogTag = value;\n                else return this._ogTag;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#load\n             * @methodOf core.page.$pageProvider\n             * @description\n             * inicia e termina o carregamento da página\n             * @return {object} com metodos de inicialização (init) e finalização (done)\n             **/\n            function load() {\n                return {\n                    init: function() {\n                        this.status = true;\n                        //console.log('loader iniciado...' + this.status);\n                    },\n                    done: function() {\n                        this.status = false;\n                        //console.log('loader finalizado...' + this.status);\n                    }\n                }\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#toast\n             * @methodOf core.page.$pageProvider\n             * @description\n             * mostra uma mensagem de aviso\n             * @param {string} msg mensagem\n             * @param {integer} time tempo em milisegundos\n             * @param {string} position posição do alerta. default: 'bottom right'\n             **/\n            function toast($mdToast) {\n                return function(msg, time, position) {\n                    time = time ? time : 5000;\n                    $mdToast.show($mdToast.simple().content(msg).position(position ? position : 'bottom right').hideDelay(time));\n                }\n            }\n            //another type of load\n            function progress() {\n                return {\n                    init: function() {\n                        this.status = true;\n                        //console.log('progress iniciado...' + this.status);\n                    },\n                    done: function() {\n                        this.status = false;\n                        //console.log('progress finalizado...' + this.status);\n                    }\n                }\n            }\n        }\n    )\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu', ['ui.router', 'truncate']);\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').filter('nospace', /*@ngInject*/ function() {\n        return function(value) {\n            return (!value) ? '' : value.replace(/ /g, '');\n        }\n    });\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').directive('menuToggle', /*@ngInject*/ function() {\n        return {\n            scope: {\n                section: '='\n            },\n            templateUrl: 'app/core/page/menu/menuToggle.tpl.html',\n            link: function($scope, $element) {\n                var controller = $element.parent().controller();\n                $scope.isOpen = function() {\n                    return controller.menu.isOpen($scope.section);\n                };\n                $scope.toggle = function() {\n                    controller.menu.toggleOpen($scope.section);\n                };\n                var parentNode = $element[0].parentNode.parentNode.parentNode;\n                if (parentNode.classList.contains('parent-list-item')) {\n                    var heading = parentNode.querySelector('h2');\n                    $element[0].firstChild.setAttribute('aria-describedby', heading.id);\n                }\n            }\n        }\n    });\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').directive('menuLink', /*@ngInject*/ function() {\n        return {\n            scope: {\n                section: '='\n            },\n            controller: 'MenuLinkCtrl',\n            controllerAs: 'vm',\n            templateUrl: 'app/core/page/menu/menuLink.tpl.html',\n            link: function($scope, $element) {\n                var controller = $element.parent().controller();\n                $scope.isSelected = function() {\n                    return controller.menu ? controller.menu.isSelected($scope.section) : '';\n                };\n            }\n        };\n    });\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').controller('MenuLinkCtrl', /*@ngInject*/ function($state) {\n        var vm = this;\n        vm.state = $state;\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').filter('menuHuman', /*@ngInject*/ function menuHuman() {\n        return function(doc) {\n            if (!doc) return;\n            if (doc.type === 'directive') {\n                return doc.name.replace(/([A-Z])/g, function($1) {\n                    return '-' + $1.toLowerCase();\n                });\n            }\n            return doc.label || doc.name;\n        }\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').provider('$menu',\n        /**\n         * @ngdoc object\n         * @name core.menu.$menuProvider\n         * @description\n         * 2 em 1 - provém configurações e a factory (ver $get) com estados/comportamentos de menu.\n         **/\n        /*@ngInject*/\n        function $menuProvider() {\n            var instance = this;\n            /**\n             * @ngdoc object\n             * @name core.menu.$menuProvider#mainMenu\n             * @propertyOf core.menu.$menuProvider\n             * @description\n             * Armazena o menu principal\n             **/\n            this.mainMenu = [];\n            /**\n             * @ngdoc object\n             * @name core.menu.$menuProvider#toolbarMenu\n             * @propertyOf core.menu.$menuProvider\n             * @description\n             * Armazena o menu para a toolbar\n             **/\n            this.toolbarMenu = [];\n            /**\n             * @ngdoc function\n             * @name core.menu.$menuProvider#$get\n             * @propertyOf core.menu.$menuProvider\n             * @description\n             * getter que vira factory pelo angular para se tornar injetável em toda aplicação\n             * @example\n             * <pre>\n             * angular.module('myApp.module').controller('MyCtrl', function($menu) {\n             *      console.log($menu.main); //printa array contendo itens do menu principal\n             *      $menu.api().close() //fecha o menu\n             * })\n             * </pre>\n             * @return {object} Retorna um objeto correspondente a uma Factory\n             **/\n            this.$get = this.get = /*@ngInject*/ function($rootScope, $mdSidenav) {\n                return {\n                    main: this.mainMenu,\n                    toolbar: this.toolbarMenu,\n                    api: api(instance, $rootScope, $mdSidenav)\n                }\n            }\n            /**\n             * @ngdoc function\n             * @name core.menu.$menuProvider#set\n             * @methodOf core.menu.$menuProvider\n             * @description\n             * Adicionar um novo menu\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($menuProvider) {\n             *     $menuProvider.set({\n             *         name: 'Conta',\n             *         type: 'link',\n             *         icon: 'fa fa-at',\n             *         url: '/account/',\n             *         state: 'app.account'\n             *     });\n             * })\n             * </pre>\n             * @param {object} menu objeto contendo as propriedades do menu\n             **/\n            this.set = function(menu) {\n                this.mainMenu.push(menu);\n            }\n            /**\n             * @ngdoc function\n             * @name core.menu.$menuProvider#setToolbar\n             * @methodOf core.menu.$menuProvider\n             * @description\n             * Adicionar um novo menu no toolbar\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($menuProvider) {\n             *     $menuProvider.setToolbar({\n             *         name: 'Conta',\n             *         type: 'link',\n             *         icon: 'fa fa-at',\n             *         url: '/account/',\n             *         state: 'app.account'\n             *     });\n             * })\n             * </pre>\n             * @param {object} menu objeto contendo as propriedades do menu\n             **/\n            this.setToolbar = function(menu) {\n                this.toolbarMenu.push(menu);\n            }\n            /**\n             * @ngdoc function\n             * @name core.menu.$menuProvider#api\n             * @methodOf core.menu.$menuProvider\n             * @example\n             * <pre>\n             * angular.module('myApp.module').controller('MyCtrl', function($menu) {\n             *      $menu.api().open() //abre o menu\n             *      $menu.api().close() //fecha o menu\n             * })\n             * </pre>\n             * @return {object} comportamentos do menu\n             **/\n            function api(instance, $rootScope, $mdSidenav) {\n                return function api() {\n                    return {\n                        openedSection: false,\n                        currentPage: null,\n                        open: function() {\n                            $rootScope.$emit('AppMenuOpened');\n                            $mdSidenav('left').open();\n                        },\n                        close: function() {\n                            $rootScope.$emit('AppMenuClosed');\n                            $mdSidenav('left').close();\n                        },\n                        //sections: sampleMenu(),\n                        sections: instance.mainMenu,\n                        selectSection: function(section) {\n                            this.openedSection = section;\n                        },\n                        toggleSelectSection: function(section) {\n                            this.openedSection = (this.openedSection === section ? false : section);\n                        },\n                        isChildSectionSelected: function(section) {\n                            return this.openedSection === section;\n                        },\n                        isSectionSelected: function(section) {\n                            var selected = false;\n                            var openedSection = this.openedSection;\n                            if (openedSection === section) {\n                                selected = true;\n                            } else if (section.children) {\n                                section.children.forEach(function(childSection) {\n                                    if (childSection === openedSection) {\n                                        selected = true;\n                                    }\n                                });\n                            }\n                            return selected;\n                        },\n                        selectPage: function(section, page) {\n                            //page && page.url && $location.path(page.url);\n                            this.currentSection = section;\n                            this.currentPage = page;\n                        },\n                        isPageSelected: function(page) {\n                            return this.currentPage === page;\n                        },\n                        isOpen: function(section) {\n                            return this.isSectionSelected(section);\n                        },\n                        toggleOpen: function(section) {\n                            return this.toggleSelectSection(section);\n                        },\n                        isSelected: function(page) {\n                            return this.isPageSelected(page);\n                        }\n                    }\n                }\n            }\n            //\n            // MENU SECTIONS SAMPLE\n            //\n            /*function sampleMenu() {\n                return [\n                    {\n                    name: 'API Reference',\n                    type: 'heading',\n                    //iconSvg: 'ic_dashboard',\n                    icon: 'fa fa-dashboard',\n                    children: [{\n                        name: 'Layout',\n                        type: 'toggle',\n                        pages: [{\n                            name: 'Container Elements',\n                            id: 'layoutContainers',\n                            url: '/layout/container'\n                        }, {\n                            name: 'Grid System',\n                            id: 'layoutGrid',\n                            url: '/layout/grid'\n                        }, {\n                            name: 'Child Alignment',\n                            id: 'layoutAlign',\n                            url: '/layout/alignment'\n                        }, {\n                            name: 'Options',\n                            id: 'layoutOptions',\n                            url: '/layout/options'\n                        }]\n                    }, {\n                        name: 'Services',\n                        pages: [],\n                        type: 'toggle'\n                    }, {\n                        name: 'Directives',\n                        pages: [],\n                        type: 'toggle'\n                    }]\n                }*/\n            /*  {\n                    name: 'Finalizar pedido',\n                    url: '/checkout',\n                    type: 'link'\n                }, \n*/\n            /*{\n                        name: 'Produtos',\n                        type: 'toggle',\n                        icon: 'fa fa-diamond',\n                        pages: [{\n                            name: 'Pulseira A',\n                            id: 'pulseira-a',\n                            url: '/produtos/pulseira-a'\n                        }, {\n                            name: 'Pulseira B',\n                            id: 'pulseira-b',\n                            url: '/produtos/pulseira-b'\n                        }, {\n                            name: 'Pulseira C',\n                            id: 'pulseira-c',\n                            url: '/produtos/pulseira-c'\n                        }]\n\n                    }\n                    ,\n                    {\n                        name: 'Políticas',\n                        type: 'toggle',\n                        icon: 'fa fa-file-text-o',\n                        pages: [{\n                            name: 'Termo de compromisso',\n                            id: 'termo',\n                            url: '/termo'\n                        }, {\n                            name: 'Política de privacidade',\n                            id: 'privacidade',\n                            url: '/privacidade'\n                        }, ]\n                    }, {\n                        name: 'Sobre',\n                        type: 'toggle',\n                        icon: 'fa fa-briefcase',\n                        pages: [{\n                            name: 'Quem somos',\n                            id: 'quemSomos',\n                            url: '/quem-somos'\n                        }]\n                    }\n                ];\n            }*/\n        })\n\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').config( /*@ngInject*/ function() {})\n})();\n(function() {\n    'use strict';\n    angular.module('core.app', [\n        'ngAnimate',\n        'ngCookies',\n        'ngTouch',\n        'ngSanitize',\n        'ngMessages',\n        'ngAria',\n        'satellizer',\n        'angulartics',\n        'angulartics.google.analytics',\n        'ui.router',\n        'ngMaterial',\n        'toastr',\n        'app.setting',\n        // 'app.env',\n        // 'core.utils',\n        // 'core.home',\n        'core.page',\n        // 'core.login',\n        'core.user',\n        // 'core.profile',\n        // 'core.account',\n        // 'core.list'\n    ]);\n})();\n(function() {\r\n    'use strict';\r\n    /* global moment */\r\n    /**\r\n     * @ngdoc object\r\n     * @name app.kit.controller:$AppCtrl\r\n     * @description\r\n     * Controlador da aplicação\r\n     * @requires setting\r\n     * @requires environment\r\n     * @requires $rootScope\r\n     * @requires $scope\r\n     * @requires $state\r\n     * @requires $location\r\n     * @requires $mdSidenav\r\n     * @requires $timeout\r\n     * @requires $auth\r\n     * @requires core.page.factory:$page\r\n     * @requires core.user.service:$User\r\n     * @requires core.user.factory:$user\r\n     * @requires core.login.$loginProvider\r\n     * @requires core.page.factory:$menu\r\n     **/\r\n    angular.module('core.app').controller('$AppCtrl', /*@ngInject*/ function(setting, $rootScope, $scope, $state, $location, $mdSidenav, $timeout, $auth, $page, $User, $user, enviroment, $menu, $login, $app) {\r\n        // var vm = this;\r\n        // vm.enviroment = enviroment;\r\n        // //\r\n        // // SEO\r\n        // //\r\n        // $page.title(setting.title);\r\n        // $page.description(setting.description);\r\n        // //\r\n        // // OPEN GRAPH\r\n        // //\r\n        // $page.ogLocale(setting.ogLocale);\r\n        // $page.ogSiteName(setting.ogSiteName);\r\n        // $page.ogTitle(setting.ogTitle);\r\n        // $page.ogDescription(setting.ogDescription);\r\n        // $page.ogUrl(setting.ogUrl);\r\n        // $page.ogImage(setting.ogImage);\r\n        // $page.ogSection(setting.ogSection);\r\n        // $page.ogTag(setting.ogTag);\r\n        // //\r\n        // // Moment\r\n        // //\r\n        // moment.locale('pt_BR');\r\n        // //\r\n        // // Events\r\n        // //  \r\n        // $rootScope.$on('$AppReboot', function() {\r\n        //     bootstrap();\r\n        // });\r\n        // $rootScope.$on('$CompanyIdUpdated', function(e, nv, ov) {\r\n        //     if (nv != ov) {\r\n        //         //quando alterar company, atualizar factory  \r\n        //         var company = $user.instance().filterCompany(nv);\r\n        //         $user.instance().current('company', company);\r\n        //         $user.instance().session('company', {\r\n        //             _id: company._id,\r\n        //             name: company.name\r\n        //         });\r\n        //         $menu.api().close();\r\n        //         bootstrap();\r\n        //     }\r\n        // });\r\n        // $rootScope.$on('$Unauthorized', function(ev, status) {\r\n        //     //\r\n        //     // Persistir o local atual\r\n        //     // para redirecionamento após o login\r\n        //     // - somente se status 401\r\n        //     //\r\n        //     if (status === 401) {\r\n        //         $app.storage('session').set({\r\n        //             locationRedirect: $location.url()\r\n        //         });\r\n        //     }\r\n        //     $rootScope.$Unauthorized = true;\r\n        //     var userInstance = $user.instance();\r\n        //     if (typeof userInstance.destroy === 'function') $user.instance().destroy();\r\n        // });\r\n        // //\r\n        // // Comportamentos para quando o usuário entrar\r\n        // //\r\n        // $rootScope.$on('$LoginSuccess', function(ev, response) {\r\n        //     //\r\n        //     // Redirecionar usuario para alguma rota pre-estabelecida\r\n        //     //\r\n        //     var appSession = $app.storage('session').get();\r\n        //     if (appSession && appSession.locationRedirect && appSession.locationRedirect != '/login/') {\r\n        //         //\r\n        //         // Redirecionar o caboclo\r\n        //         //\r\n        //         $location.path(appSession.locationRedirect);\r\n        //         //\r\n        //         // Resetar o locationRedirect\r\n        //         //\r\n        //         $app.storage('session').set({\r\n        //             locationRedirect: ''\r\n        //         })\r\n        //     }\r\n        //     //\r\n        //     // Zerar o $rootScope.$Unauthorized\r\n        //     //\r\n        //     $rootScope.$Unauthorized = false;\r\n        // });\r\n        // //\r\n        // // BOOTSTRAP\r\n        // //  \r\n        // bootstrap(true);\r\n\r\n        // function bootstrap(withUser) {\r\n        //     //nonWww2www();\r\n        //     //http2https(); //@bug - bug com _escaped_fragment_\r\n        //     if (withUser) {\r\n        //         var newUser = new $User();\r\n        //         $user.set(newUser);\r\n        //     }\r\n        //     vm.user = $user.instance();\r\n        //     vm.$page = $page;\r\n        //     vm.setting = setting;\r\n        //     vm.year = moment().format('YYYY');\r\n        //     vm.state = $state;\r\n        //     vm.isAuthed = $auth.isAuthenticated;\r\n        //     vm.logout = logout;\r\n        //     vm.menu = $menu.api();\r\n        //     vm.loginConfig = $login.config;\r\n        //     vm.iframe = $location.hash() === 'iframe' ? true : false;\r\n        //     vm.logo = $app.logo;\r\n        //     vm.logoWhite = $app.logoWhite;\r\n        // }\r\n        // //\r\n        // // Behaviors\r\n        // //\r\n        // function logout() {\r\n        //     $mdSidenav('left').close();\r\n        //     $timeout(function() {\r\n        //         var userInstance = $user.instance();\r\n        //         if (typeof userInstance.destroy === 'function') $user.instance().destroy(true);\r\n        //         bootstrap(true);\r\n        //     }, 500);\r\n        // }\r\n        // //\r\n        // // Redirect http to https //@bug - bug com _escaped_fragment_ - redirecionando via CF\r\n        // // https://github.com/esgrupo/livejob/issues/15\r\n        // //\r\n        // // function http2https() {\r\n        // //     //tenho https configurado\r\n        // //     if (setting.https.length) {\r\n        // //         //host esta na configuração\r\n        // //         if (_.indexOf(setting.https, $location.host().replace(/www./g, '')) != -1) {\r\n        // //             //protocolo atual não é seguro            \r\n        // //             if ($location.protocol() !== 'https') {\r\n        // //                 //estou na home #15 bug com _escaped_fragment_\r\n        // //                 if ($state.current.name === 'app.home') {\r\n        // //                     //bingo\r\n        // //                     $window.location.href = $location.absUrl().replace(/http/g, 'https');\r\n        // //                 }\r\n        // //             }\r\n        // //         }\r\n        // //     }\r\n        // // }\r\n        // //\r\n        // // Redirect non-www to www\r\n        // // https://github.com/esgrupo/livejob/issues/17\r\n        // //\r\n        // function nonWww2www() {\r\n        //     //redirecionar www\r\n        //     if (setting.redirWww) {\r\n        //         //se estiver em produção\r\n        //         if (enviroment === 'production') {\r\n        //             if (!hasWww()) {\r\n        //                 $window.location.href = 'https://www.' + $location.host() + $location.path();\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        // function hasWww() {\r\n        //     var www = new RegExp(\"www.\");\r\n        //     return www.test($location.host());\r\n        // }\r\n    })\r\n})();\n// (function() {\n//     'use strict';\n\n//     angular\n//         .module('core.app')\n//         .controller('MainController', MainController);\n\n//     /** @ngInject */\n//     function MainController() {\n//         var vm = this;\n//         vm.techs = [{\n//             title: 'MongoDB',\n//             desc: 'Banco de dados orientado a documentos - NoSQL',\n//             logo: 'mongodb.png'\n//         }, {\n//             title: 'Express',\n//             desc: 'Framework para Node.js. Flexível e robusto para desenvolver aplicações web.',\n//             logo: 'express.png'\n//         }, {\n//             title: 'AngularJS',\n//             desc: 'Framework Javascript para criação de aplicações single-page',\n//             logo: 'angular.png'\n//         }, {\n//             title: 'Node.js',\n//             desc: 'Plataforma baseada em Javascript para construir aplicações de rede rápidas e escaláveis',\n//             logo: 'node.png'\n//         }];\n//     }\n// })();\n// (function() {\n//     'use strict';\n\n//     angular\n//         .module('mtdaDe')\n//         .config(config);\n\n//     /** @ngInject */\n//     function config($logProvider, $appProvider, toastrConfig) {\n\n//         /**\n//          * App Config\n//          */\n//         $appProvider.layoutUrl('app/layout/layout.tpl.html');\n//         // $appProvider.toolbarUrl('app/layout/toolbar-default.tpl.html');\n//         //$appProvider.toolbarTitleUrl('app/layout/toolbarTitle.tpl.html');\n//         // $appProvider.sidenavUrl('app/layout/sidenav.tpl.html');\n//         // $appProvider.logoWhite('https://livejob.s3.amazonaws.com/livejob-white.png');\n\n//         //\n//         // GULP-ANGULAR DEFAULT\n//         //\n\n//         // Enable log\n//         $logProvider.debugEnabled(true);\n\n//         // Set options third-party lib\n//         toastrConfig.allowHtml = true;\n//         toastrConfig.timeOut = 3000;\n//         toastrConfig.positionClass = 'toast-top-right';\n//         toastrConfig.preventDuplicates = true;\n//         toastrConfig.progressBar = true;\n//     }\n\n// })();\n(function() {\n    angular.module(\"app.setting\", []).constant(\"setting\", {\n        name: \"app kit\",\n        slug: \"app-kit\",\n        version: \"0.0.1\",\n        title: \"app kit\",\n        baseUrl: \"\",\n        titleSeparator: \" — \",\n        description: \"app-kit\",\n        copyright: \"app-kit\",\n        google: {\n            clientId: \"\",\n            language: \"pt-BR\"\n        },\n        facebook: {\n            scope: \"email\",\n            appId: \"\",\n            appSecret: \"\",\n            language: \"pt-BR\"\n        },\n        https: [],\n        redirWww: false,\n        ogLocale: \"pt_BR\",\n        ogSiteName: \"app-kit\",\n        ogTitle: \"app-kit\",\n        ogDescription: \"app-kit\",\n        ogUrl: \"\",\n        ogImage: \"\",\n        ogSection: \"app-kit\",\n        ogTag: \"app-kit\"\n    });\n})();\n(function() {\n    'use strict';\n    angular.module('mtdaDe', [\n        'core.app'\n        // 'account.module',\n        // 'ngAnimate',\n        // 'ngCookies',\n        // 'ngTouch',\n        // 'ngSanitize',\n        // 'ngMessages',\n        // 'ngAria',\n        // 'ui.router',\n        // 'ngMaterial',\n        // 'toastr',\n\n    ]);\n})();\nangular.module(\"mtdaDe\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/layout/layout.tpl.html\",\"<loader></loader><md-content layout=\\\"column\\\" class=\\\"home\\\"><header><acme-navbar></acme-navbar></header><div class=\\\"hero\\\"><div class=\\\"wrapper\\\"><h1>Desenvolvedor WEB e especialista em SEO</h1><p>Matheus Davidson tem 10 anos de experiência de mercado no Brasil e Inglaterra, apaixonado por tecnologia, está sempre antenado nas novidades da internet!</p><div class=\\\"hero-action\\\"><md-button class=\\\"md-raised\\\">Perfil</md-button><md-button class=\\\"md-raised\\\">Cases</md-button></div></div><div class=\\\"hero-mkt\\\"><div class=\\\"wrapper\\\"><p class=\\\"md-small-headline\\\">Pensando em desenvolver um site, e-commerce ou aplicação? Posso te ajudar, <a href=\\\"#\\\">entre em contato.</a></p></div></div></div><div class=\\\"wrapper techs-wrapper\\\"><h2 class=\\\"intro-title md-display-2 text-primary text-dark\\\">Tecnologia utilizada recentemente</h2><p class=\\\"intro-desc\\\">A tecnologia utilizada em cada aplicação vai depender do caso de uso, mas trabalho preferencialmente com a MEAN stack, uma full-stack javascript que da agilidade e qualidade ao processo de desenvolvimento.</p><br><div class=\\\"techs\\\" layout-align-gt-sm=\\\"space-between\\\" layout-align-sm=\\\"center\\\"><div class=\\\"item\\\" ng-repeat=\\\"item in main.techs\\\"><img ng-src=\\\"assets/images/{{ item.logo }}\\\" alt=\\\"{{ item.title }}\\\"><h3 class=\\\"md-title text-primary\\\">{{ item.title }}</h3><p>{{ item.desc }}</p></div></div><br></div><div class=\\\"cur-project\\\"><div class=\\\"wrapper\\\"><h2 class=\\\"md-headline\\\">Projeto que estou trabalhando no momento</h2><p class=\\\"md-body-2\\\"><span class=\\\"client\\\">Fiorebella</span><br>Desenvolvimento de e-commerce para vendas de flores e cestas de café da manhã no espírito santo.</p><br><img class=\\\"pro-image\\\" src=\\\"assets/images/iphone.png\\\" alt=\\\"\\\"></div></div><footer><div class=\\\"wrapper\\\" layout=\\\"row\\\" layout-align=\\\"start end\\\"><div class=\\\"copyright\\\" layout=\\\"row\\\" layout-align=\\\"start end\\\" flex=\\\"\\\"><img class=\\\"logo\\\" src=\\\"assets/images/logo.png\\\" alt=\\\"\\\"> <span class=\\\"md-body-2\\\">© 2005 - 2015</span></div><div class=\\\"social\\\" layout=\\\"row\\\" layout-align=\\\"end end\\\" flex=\\\"\\\"><a href=\\\"https://www.facebook.com/matheusdavidson\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-facebook-official\\\"></i><md-tooltip>Ir para o facebook</md-tooltip></a> <a href=\\\"https://plus.google.com/+MatheusAndradeD\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-google-plus-square\\\"></i><md-tooltip>Ir para o google+</md-tooltip></a> <a href=\\\"https://twitter.com/mtdade\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-twitter-square\\\"></i><md-tooltip>Ir para o twitter</md-tooltip></a> <a href=\\\"https://github.com/matheusdavidson\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-github-square\\\"></i><md-tooltip>Ir para o github</md-tooltip></a></div></div></footer></md-content>\");\n$templateCache.put(\"app/main/main.html\",\"<md-content layout=\\\"column\\\" class=\\\"home\\\"><header><acme-navbar></acme-navbar></header><div class=\\\"hero\\\"><div class=\\\"wrapper\\\"><h1>Desenvolvedor WEB e especialista em SEO</h1><p>Matheus Davidson tem 10 anos de experiência de mercado no Brasil e Inglaterra, apaixonado por tecnologia, está sempre antenado nas novidades da internet!</p><div class=\\\"hero-action\\\"><md-button class=\\\"md-raised\\\">Perfil</md-button><md-button class=\\\"md-raised\\\">Cases</md-button></div></div><div class=\\\"hero-mkt\\\"><div class=\\\"wrapper\\\"><p class=\\\"md-small-headline\\\">Pensando em desenvolver um site, e-commerce ou aplicação? Posso te ajudar, <a href=\\\"#\\\">entre em contato.</a></p></div></div></div><div class=\\\"wrapper techs-wrapper\\\"><h2 class=\\\"intro-title md-display-2 text-primary text-dark\\\">Tecnologia utilizada recentemente</h2><p class=\\\"intro-desc\\\">A tecnologia utilizada em cada aplicação vai depender do caso de uso, mas trabalho preferencialmente com a MEAN stack, uma full-stack javascript que da agilidade e qualidade ao processo de desenvolvimento.</p><br><div class=\\\"techs\\\" layout-align-gt-sm=\\\"space-between\\\" layout-align-sm=\\\"center\\\"><div class=\\\"item\\\" ng-repeat=\\\"item in main.techs\\\"><img ng-src=\\\"assets/images/{{ item.logo }}\\\" alt=\\\"{{ item.title }}\\\"><h3 class=\\\"md-title text-primary\\\">{{ item.title }}</h3><p>{{ item.desc }}</p></div></div><br></div><div class=\\\"cur-project\\\"><div class=\\\"wrapper\\\"><h2 class=\\\"md-headline\\\">Projeto que estou trabalhando no momento</h2><p class=\\\"md-body-2\\\"><span class=\\\"client\\\">Fiorebella</span><br>Desenvolvimento de e-commerce para vendas de flores e cestas de café da manhã no espírito santo.</p><br><img class=\\\"pro-image\\\" src=\\\"assets/images/iphone.png\\\" alt=\\\"\\\"></div></div><footer><div class=\\\"wrapper\\\" layout=\\\"row\\\" layout-align=\\\"start end\\\"><div class=\\\"copyright\\\" layout=\\\"row\\\" layout-align=\\\"start end\\\" flex=\\\"\\\"><img class=\\\"logo\\\" src=\\\"assets/images/logo.png\\\" alt=\\\"\\\"> <span class=\\\"md-body-2\\\">© 2005 - 2015</span></div><div class=\\\"social\\\" layout=\\\"row\\\" layout-align=\\\"end end\\\" flex=\\\"\\\"><a href=\\\"https://www.facebook.com/matheusdavidson\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-facebook-official\\\"></i><md-tooltip>Ir para o facebook</md-tooltip></a> <a href=\\\"https://plus.google.com/+MatheusAndradeD\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-google-plus-square\\\"></i><md-tooltip>Ir para o google+</md-tooltip></a> <a href=\\\"https://twitter.com/mtdade\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-twitter-square\\\"></i><md-tooltip>Ir para o twitter</md-tooltip></a> <a href=\\\"https://github.com/matheusdavidson\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-github-square\\\"></i><md-tooltip>Ir para o github</md-tooltip></a></div></div></footer></md-content>\");\n$templateCache.put(\"app/core/menu/menuLink.tpl.html\",\"<md-button ng-class=\\\"{\\'active\\' : isSelected()||vm.state.current.name === section.state}\\\" ng-href=\\\"{{section.url}}\\\"><i ng-if=\\\"section.icon\\\" class=\\\"{{section.icon}}\\\"></i><md-icon ng-if=\\\"section.iconMi\\\" md-font-set=\\\"material-icons\\\">{{section.iconMi}}</md-icon><span>{{section | menuHuman }}</span></md-button>\");\n$templateCache.put(\"app/core/menu/menuToggle.tpl.html\",\"<md-button class=\\\"md-button-toggle\\\" ng-click=\\\"toggle()\\\" aria-controls=\\\"app-menu-{{section.name | nospace}}\\\" flex=\\\"\\\" layout=\\\"row\\\" aria-expanded=\\\"{{isOpen()}}\\\"><i ng-if=\\\"section.icon\\\" class=\\\"{{section.icon}}\\\"></i> <span class=\\\"title\\\">{{section.name}}</span> <span aria-hidden=\\\"true\\\" class=\\\"md-toggle-icon\\\" ng-class=\\\"{\\'toggled\\' : isOpen()}\\\"></span></md-button><ul ng-show=\\\"isOpen()\\\" id=\\\"app-menu-{{section.name | nospace}}\\\" class=\\\"menu-toggle-list\\\"><li ng-repeat=\\\"page in section.pages\\\"><div layout=\\\"row\\\"><menu-link section=\\\"page\\\" flex=\\\"\\\"></menu-link><md-button flex=\\\"25\\\" ng-click=\\\"cart.add(page._)\\\" aria-label=\\\"adicione {{page.name}} ao carrinho\\\" title=\\\"adicione {{page.name}} ao carrinho\\\" ng-if=\\\"section.product\\\"><i class=\\\"fa fa-cart-plus\\\"></i></md-button></div></li></ul>\");\n$templateCache.put(\"app/core/menu/sidenav.tpl.html\",\"<div layout=\\\"column\\\"><menu-facepile ng-if=\\\"app.user.current(\\'company\\').facebook && (app.state.current.name!=\\'app.home\\' && app.state.current.name!=\\'app.account\\') && app.enviroment !== \\'development\\' && !app.iframe\\\" hide-sm=\\\"\\\" width=\\\"304\\\" url=\\\"https://www.facebook.com/{{app.user.current(\\'company\\').facebook}}\\\" facepile=\\\"true\\\" hide-cover=\\\"false\\\" ng-hide=\\\"app.state.current.name===\\'app.pages\\'\\\"></menu-facepile><menu-avatar first-name=\\\"app.user.profile.firstName\\\" last-name=\\\"app.user.profile.lastName\\\" gender=\\\"app.user.profile.gender\\\" facebook=\\\"app.user.facebook\\\"></menu-avatar><div flex=\\\"\\\"><ul class=\\\"app-menu\\\"><li ng-repeat=\\\"section in app.menu.sections\\\" class=\\\"parent-list-item\\\" ng-class=\\\"{\\'parentActive\\' : app.menu.isSectionSelected(section)}\\\"><h2 class=\\\"menu-heading\\\" ng-if=\\\"section.type === \\'heading\\'\\\" id=\\\"heading_{{ section.name | nospace }}\\\" layout=\\\"row\\\"><i ng-if=\\\"section.icon\\\" class=\\\"{{section.icon}}\\\"></i><md-icon ng-if=\\\"section.iconMi\\\" md-font-set=\\\"material-icons\\\">{{section.icon}}</md-icon><my-svg-icon ng-if=\\\"section.iconSvg\\\" class=\\\"ic_24px\\\" icon=\\\"{{section.iconSvg}}\\\"></my-svg-icon><span>{{section.name}}</span></h2><menu-link section=\\\"section\\\" ng-if=\\\"section.type === \\'link\\'\\\"></menu-link><menu-toggle section=\\\"section\\\" ng-if=\\\"section.type === \\'toggle\\'\\\"></menu-toggle><ul ng-if=\\\"section.children\\\" class=\\\"menu-nested-list\\\"><li ng-repeat=\\\"child in section.children\\\" ng-class=\\\"{\\'childActive\\' : app.menu.isChildSectionSelected(child)}\\\"><menu-toggle section=\\\"child\\\"></menu-toggle></li></ul></li><li><a class=\\\"md-button md-default-theme\\\" ng-click=\\\"app.logout()\\\"><i class=\\\"fa fa-power-off\\\"></i> <span class=\\\"title\\\">Sair</span></a></li></ul></div><div layout=\\\"column\\\" layout-align=\\\"center center\\\" class=\\\"page-footer text-center\\\"><md-content flex=\\\"\\\" class=\\\"main-wrapper\\\"><div class=\\\"copyright\\\"><strong>{{ app.setting.copyright }} © {{ app.year }}</strong></div><div class=\\\"terms\\\"><a ui-sref=\\\"app.pages({slug:\\'privacy\\'})\\\">Política de Privacidade</a> - <a ui-sref=\\\"app.pages({slug:\\'terms\\'})\\\">Termos de Serviço</a></div></md-content></div></div>\");\n$templateCache.put(\"app/core/page/loader/loader.tpl.html\",\"<div class=\\\"page-loader\\\" ng-class=\\\"{\\'show\\':app.$page.load.status}\\\"><md-progress-linear md-mode=\\\"indeterminate\\\"></md-progress-linear></div>\");\n$templateCache.put(\"app/core/page/toolbar/toolbar.tpl.html\",\"<div class=\\\"md-toolbar-tools\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div hide=\\\"\\\" show-sm=\\\"\\\" show-md=\\\"\\\" layout=\\\"row\\\"><a ng-click=\\\"app.menu.open()\\\" ng-if=\\\"app.isAuthed()\\\" aria-label=\\\"menu\\\"><md-icon md-svg-src=\\\"assets/images/icons/ic_menu_24px.svg\\\"></md-icon></a><toolbar-title hide-sm=\\\"\\\" hide-md=\\\"\\\"></toolbar-title></div><toolbar-title hide=\\\"\\\" show-gt-md=\\\"\\\"></toolbar-title><div layout=\\\"row\\\" ng-if=\\\"app.state.current.name != \\'app.home\\'\\\"><ul class=\\\"top-menu\\\"><li></li></ul><toolbar-menu ng-if=\\\"app.isAuthed()\\\"></toolbar-menu><a ui-sref=\\\"app.home\\\"><img hide=\\\"\\\" show-sm=\\\"\\\" show-md=\\\"\\\" class=\\\"logo-header\\\" ng-src=\\\"{{app.logoWhite}}\\\"></a></div></div>\");\n$templateCache.put(\"app/core/page/toolbar/menu/toolbarMenu.tpl.html\",\"<ul class=\\\"top-menu\\\"><li ng-repeat=\\\"item in menu\\\"><a id=\\\"{{item.id}}\\\" title=\\\"{{item.name}}\\\"><i class=\\\"{{item.icon}}\\\"></i></a></li></ul>\");\n$templateCache.put(\"app/core/page/toolbar/title/toolbarTitle.tpl.html\",\"<div class=\\\"logo-company\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><a href=\\\"/\\\"><img class=\\\"logo-header\\\" ng-src=\\\"{{app.logoWhite}}\\\"></a></div>\");}]);"],"sourceRoot":"/source/"}