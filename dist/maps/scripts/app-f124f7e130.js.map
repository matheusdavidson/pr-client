{"version":3,"sources":["scripts/app-f124f7e130.js"],"names":["angular","module","directive","$app","templateUrl","toolbarTitleUrl","$menu","scope","company","controller","controllerAs","link","menu","toolbar","$rootScope","$mdBottomSheet","bootstrap","vm","this","$on","hide","showFilters","show","locals","disableParentScroll","then","config","elem","attr","controlerAs","$scope","$auth","$mdToast","$user","$page","$login","setting","register","sign","load","init","onSuccess","result","msg","data","user","profile","firstName","name","signupWelcome","replace","done","userInstance","instance","onError","simple","content","error","position","hideDelay","signup","lastName","email","password","provider","$http","$state","api","apiClientLoaded","gapi","client","plus","people","get","userId","execute","handleResponse","glUser","login","response","gender","setToken","token","onFail","post","url","id","givenName","familyName","emails","value","clientId","google","language","restrict","logon","$emit","factory","Facebook","go","cbSuccess","cbFail","getLoginStatus","status","loginHandler","authResponse","facebook","me","fbUser","first_name","last_name","applicant","fbLogin","FacebookProvider","version","appId","locale","service","$timeout","$window","getStorageUser","JSON","parse","window","localStorage","getItem","slug","setStorageUser","setItem","stringify","removeStorageUser","removeItem","getStorageSession","setStorageSession","session","removeStorageSession","getCompanies","roleForCompany","role","getCompany","userInstanceRoleCompany","length","User","params","alert","message","currentData","sessionData","prototype","extend","_id","current","toast","filterCompany","key","val","companies","forEach","row","destroy","set","removeToken","logout","getWorkPosition","companyid","profileUpdate","_instance","_setting","$get","title","_title","description","_description","ogLocale","_ogLocale","ogSiteName","_ogSiteName","ogTitle","_ogTitle","ogDescription","_ogDescription","ogUrl","_ogUrl","ogImage","_ogImage","ogSection","_ogSection","ogTag","_ogTag","time","progress","_config","homeEnabled","filter","section","$element","parent","isOpen","toggle","toggleOpen","parentNode","classList","contains","heading","querySelector","firstChild","setAttribute","isSelected","state","doc","type","$1","toLowerCase","label","$mdSidenav","openedSection","currentPage","open","close","sections","mainMenu","selectSection","toggleSelectSection","isChildSectionSelected","isSectionSelected","selected","children","childSection","selectPage","page","currentSection","isPageSelected","toolbarMenu","main","push","setToolbar","$location","$User","enviroment","$stateProvider","_layoutUrl","_toolbarUrl","_toolbarTitleUrl","_sidenavUrl","_logo","_logoWhite","layoutUrl","toolbarUrl","sidenavUrl","logoWhite","logo","storage","where","item","toJson","fromJson","constant","change","pw","transitionTo","success","put","userHash","lost","titleSeparator","hash","_templateUrl","_signupTemplateUrl","_lostTemplateUrl","signupTemplateUrl","lostTemplateUrl","$urlRouterProvider","$locationProvider","$loginProvider","protected","views","resolve","authed","isAuthenticated","path","auth","loginSuccessRedirect","location","html5Mode","baseUrl","copyright","appSecret","https","redirWww","run","$templateCache"],"mappings":"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","file":"scripts/app-f124f7e130.js","sourcesContent":["(function() {\n    'use strict';\n    angular.module('core.page', [\n        'core.menu',\n        'anim-in-out',\n        'ui.utils.masks',\n        'directives.inputMatch'\n    ]);\n})();\n(function() {\n    'use strict';\n    angular.module('core.page').directive('toolbarTitle', /*@ngInject*/ function($app) {\n        return {\n            templateUrl: function() {\n                return $app.toolbarTitleUrl;\n            }\n        }\n    });\n})();\n(function() {\n    'use strict';\n    angular.module('core.page').directive('toolbarMenu', /*@ngInject*/ function toolbarMenu($menu) {\n        return {\n            templateUrl: \"app/core/page/toolbar/menu/toolbarMenu.tpl.html\",\n            scope: {\n                company: '='\n            },\n            controller: 'ToolbarMenuCtrl',\n            controllerAs: 'vm',\n            link: function(scope) {\n                scope.menu = $menu.toolbar;\n            }\n        }\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('core.page').controller('ToolbarMenuCtrl', /*@ngInject*/ function($rootScope, $mdBottomSheet) {\n        var vm = this;\n        $rootScope.$on('AppMenuOpened', function() {\n            $mdBottomSheet.hide();\n        });\n        $rootScope.$on('CompanyIdUpdated', function() {\n            $mdBottomSheet.hide();\n        });\n        vm.showFilters = function() {\n            $mdBottomSheet.show({\n                templateUrl: 'app/finder/filter/finderFilterMobile.tpl.html',\n                controller: 'FinderFilterCtrl',\n                controllerAs: 'vm',\n                //targetEvent: $event,\n                //parent: '.finder-wrapper',\n                locals: {},\n                //scope: ''\n                //preserveScope: true,\n                disableParentScroll: false\n            }).then(function() {});\n        }\n        //\n        // Events\n        //\n        //\n        // Bootstrap\n        //\n        //\n        bootstrap();\n\n        function bootstrap() {}\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('core.page').directive('loader', /*@ngInject*/ function() {\n        return {\n            templateUrl: \"app/core/page/loader/loader.tpl.html\",\n        }\n    })\n})();\n(function() {\n    'use strict';\n    /**\n     * @ngdoc overview\n     * @name core.login\n     * @requires app.env\n     * @requires app.setting\n     * @requires satellizer\n     **/\n    angular.module('core.login', [\n        'app.env',\n        'app.setting',\n        'ui.router',\n        'satellizer',\n        'google.login',\n        'facebook.login'\n    ]);\n})();\n(function() {\n    'use strict';\n    /**\n     * @ngdoc directive\n     * @name core.login.directive:registerForm\n     * @restrict E\n     * @description\n     * Componente para o formulário de cadastro\n     * @element div\n     * @param {object} config objeto de configurações do módulo login\n     * @param {string} template-url caminho para o template do formulário\n     **/\n    angular.module('core.login').directive('registerForm', /*@ngInject*/ function() {\n        return {\n            scope: {\n                config: '=',\n                templateUrl: '='\n            },\n            templateUrl: function(elem, attr) {\n                return attr.templateUrl ? attr.templateUrl : \"app/core/login/register/registerForm.tpl.html\";\n            },\n            controller: 'RegisterFormCtrl',\n            controlerAs: 'vm'\n        }\n    })\n})();\n(function() {\r\n    'use strict';\r\n    angular.module('core.login').controller('RegisterFormCtrl', /*@ngInject*/ function($scope, $auth, $mdToast, $user, $page, $login, setting) {\r\n        $scope.register = register;\r\n        $scope.sign = {};\r\n\r\n        function register(sign) {\r\n            $page.load.init();\r\n            var onSuccess = function(result) {\r\n                var msg = 'Olá ' + result.data.user.profile.firstName + ', você entrou para o ' + setting.name;\r\n                if ($login.config.signupWelcome) {\r\n                    msg = $login.config.signupWelcome.replace('@firstName', result.data.user.profile.firstName).replace('@appName', setting.name);\r\n                }\r\n                $page.load.done();\r\n                var userInstance = $user.instance();\r\n                if (typeof userInstance.init === 'function') $user.instance().init(result.data.user, true, msg, 10000);\r\n            }\r\n            var onError = function(result) {\r\n                $page.load.done();\r\n                $mdToast.show($mdToast.simple().content(result.data && result.data.error ? result.data.error : 'error').position('bottom right').hideDelay(10000))\r\n            }\r\n            $auth.signup({\r\n                firstName: sign.firstName,\r\n                lastName: sign.lastName,\r\n                email: sign.email,\r\n                password: sign.password,\r\n                provider: 'local'\r\n            }).then(onSuccess, onError);\r\n        }\r\n    })\r\n})();\n(function() {\n    'use strict';\n    angular.module('google.login', [\n        'app.env',\n        'app.setting',\n        'directive.g+signin'\n    ])\n})();\n(function() {\n    'use strict';\n    angular.module('google.login').directive('googleLogin', /*@ngInject*/ function() {\n        return {\n            templateUrl: \"app/core/login/google/googleLogin.tpl.html\",\n            controller: 'GoogleLoginCtrl',\n            controllerAs: 'google'\n        }\n    })\n})();\n(function() {\r\n    'use strict';\r\n    /* global gapi */\r\n    angular.module('google.login').controller('GoogleLoginCtrl', /*@ngInject*/ function($auth, $scope, $http, $mdToast, $state, $page, $user, setting, api) {\r\n        var vm = this;\r\n        vm.clientId = setting.google.clientId;\r\n        vm.language = setting.google.language;\r\n        $scope.$on('event:google-plus-signin-success', function( /*event, authResult*/ ) {\r\n            // Send login to server or save into cookie\r\n            gapi.client.load('plus', 'v1', apiClientLoaded);\r\n        });\r\n        $scope.$on('event:google-plus-signin-failure', function( /*event, authResult*/ ) {\r\n            // @todo Auth failure or signout detected\r\n        });\r\n\r\n        function apiClientLoaded() {\r\n            gapi.client.plus.people.get({\r\n                userId: 'me'\r\n            }).execute(handleResponse);\r\n        }\r\n\r\n        function handleResponse(glUser) {\r\n            login(glUser);\r\n        }\r\n\r\n        function login(glUser) {\r\n            $page.load.init();\r\n            var onSuccess = function(response) {\r\n                $page.load.done();\r\n                var msg = false;\r\n                var gender = (response.data.user.profile && response.data.user.profile.gender && response.data.user.profile.gender === 'F') ? 'a' : 'o';\r\n                if (response.data.new) msg = 'Olá ' + response.data.user.profile.firstName + ', você entrou. Seja bem vind' + gender + ' ao ' + setting.name;\r\n                $auth.setToken(response.data.token);\r\n                var userInstance = $user.instance();\r\n                if (typeof userInstance.init === 'function') $user.instance().init(response.data.user, true, msg);\r\n            }\r\n            var onFail = function(result) {\r\n                $page.load.done();\r\n                $mdToast.show($mdToast.simple().content(result.data && result.data.error ? result.data.error : 'error').position('bottom right').hideDelay(3000))\r\n            }\r\n            $http.post(api.url + '/auth/google', {\r\n                provider: 'google',\r\n                id: glUser.id,\r\n                firstName: glUser.name.givenName,\r\n                lastName: glUser.name.familyName,\r\n                email: glUser.emails[0].value,\r\n                gender: glUser.gender\r\n            }).then(onSuccess, onFail);\r\n        }\r\n    })\r\n})();\n(function() {\n    'use strict';\n    /**\n     * @ngdoc directive\n     * @name core.login.directive:loginForm\n     * @restrict EA\n     * @description\n     * Componente para o formulário de login\n     * @element div\n     * @param {object} config objeto de configurações do módulo login\n     * @param {object} user objeto instância do usuário\n     * @param {string} template-url caminho para o template do formulário\n     **/\n    angular.module('core.login').directive('loginForm', /*@ngInject*/ function() {\n        return {\n            scope: {\n                config: '=',\n                user: '=',\n                templateUrl: '='\n            },\n            restrict: 'EA',\n            templateUrl: function(elem, attr) {\n                return attr.templateUrl ? attr.templateUrl : \"app/core/login/form/loginForm.tpl.html\";\n            },\n            controller: '$LoginFormCtrl',\n            controllerAs: 'vm',\n            link: function() {}\n        }\n    });\n})();\n(function() {\r\n    'use strict';\r\n    /**\r\n     * @ngdoc object\r\n     * @name core.login.controller:$LoginFormCtrl\r\n     * @description\r\n     * Controlador do componente\r\n     * @requires $scope\r\n     * @requires $auth\r\n     * @requires $mdToast\r\n     * @requires core.user.factory:$user\r\n     **/\r\n    angular.module('core.login').controller('$LoginFormCtrl', /*@ngInject*/ function($rootScope, $scope, $auth, $page, $mdToast, $user) {\r\n        var vm = this;\r\n        vm.login = login;\r\n        /**\r\n         * @ngdoc function\r\n         * @name core.login.controller:$LoginFormCtrl#login\r\n         * @propertyOf core.login.controller:$LoginFormCtrl\r\n         * @description\r\n         * Controlador do componente de login\r\n         * @param {string} logon objeto contendo as credenciais email e password\r\n         **/\r\n        function login(logon) {\r\n            $page.load.init();\r\n            var onSuccess = function(response) {\r\n                $page.load.done();\r\n                var userInstance = $user.instance();\r\n                if (typeof userInstance.init === 'function') $user.instance().init(response.data.user, true);\r\n                $rootScope.$emit('$LoginSuccess', response);\r\n            }\r\n            var onError = function(result) {\r\n                $page.load.done();\r\n                $mdToast.show($mdToast.simple().content(result.data && result.data.error ? result.data.error : 'error').position('bottom right').hideDelay(3000))\r\n            }\r\n            $auth.login({\r\n                email: logon.email,\r\n                password: logon.password\r\n            }).then(onSuccess, onError);\r\n        }\r\n    })\r\n})();\n(function() {\n    'use strict';\n    angular.module('facebook.login', [\n        'facebook',\n        'app.env',\n        'app.setting'\n    ]);\n})();\n(function() {\r\n    'use strict';\r\n    angular.module('facebook.login').factory('fbLogin', /*@ngInject*/ function($rootScope, $auth, $mdToast, $http, Facebook, $user, $page, $login, api, setting) {\r\n        return {\r\n            go: go\r\n        }\r\n\r\n        function go(cbSuccess, cbFail) {\r\n            $page.load.init();\r\n            Facebook.getLoginStatus(function(response) {\r\n                if (response.status === 'connected') {\r\n                    return loginHandler(cbSuccess, cbFail);\r\n                } else {\r\n                    Facebook.login(function(response) {\r\n                        if (response.error || !response.status || !response.authResponse) {\r\n                            $page.load.done();\r\n                            return;\r\n                        }\r\n                        return loginHandler(cbSuccess, cbFail);\r\n                    }, {\r\n                        scope: setting.facebook.scope || 'email'\r\n                    });\r\n                }\r\n            })\r\n        }\r\n\r\n        function me() {\r\n            return Facebook.api('/me', function() {\r\n                //$scope.user = response;\r\n            });\r\n        }\r\n\r\n        function loginHandler(cbSuccess, cbFail) {\r\n            var onSuccess = function(fbUser) {\r\n                var onSuccess = function(response) {\r\n                    $page.load.done();\r\n                    var msg = false;\r\n                    var gender = (response.data.user.profile && response.data.user.profile.gender && response.data.user.profile.gender === 'F') ? 'a' : 'o';\r\n                    if (response.data.new) {\r\n                        msg = 'Olá ' + response.data.user.profile.firstName + ', você entrou. Seja bem vind' + gender + ' ao ' + setting.name;\r\n                        if ($login.config.signupWelcome) {\r\n                            msg = $login.config.signupWelcome.replace('@firstName', response.data.user.profile.firstName).replace('@appName', setting.name);\r\n                        }\r\n                    }\r\n                    $auth.setToken(response.data.token);\r\n                    var userInstance = $user.instance();\r\n                    if (typeof userInstance.init === 'function') $user.instance().init(response.data.user, true, msg);\r\n                    if (cbSuccess) cbSuccess()\r\n                    $rootScope.$emit('$LoginSuccess', response);\r\n                }\r\n                var onFail = function(response) {\r\n                    $page.load.done();\r\n                    $mdToast.show($mdToast.simple().content(response.data && result.data.error ? response.data.error : 'error').position('bottom right').hideDelay(3000))\r\n                    if (cbFail) cbFail()\r\n                }\r\n                var gender = '';\r\n                gender = fbUser.gender && fbUser.gender === 'female' ? 'F' : gender;\r\n                $http.post(api.url + '/auth/facebook', {\r\n                    provider: 'facebook',\r\n                    id: fbUser.id,\r\n                    firstName: fbUser.first_name,\r\n                    lastName: fbUser.last_name,\r\n                    email: fbUser.email,\r\n                    gender: gender,\r\n                    applicant: true\r\n                }).then(onSuccess, onFail);\r\n            }\r\n            var onFail = function() {}\r\n            me().then(onSuccess, onFail);\r\n        }\r\n    })\r\n})();\n(function() {\n    'use strict';\n    angular.module('facebook.login').directive('facebookLogin', /*@ngInject*/ function() {\n        return {\n            templateUrl: function(elem, attr) {\n                return attr.templateUrl ? attr.templateUrl : \"app/core/login/facebook/facebookLogin.tpl.html\";\n            },\n            scope: {\n                user: '=',\n                templateUrl: '='\n            },\n            controller: 'FacebookLoginCtrl',\n            controllerAs: 'fb'\n        }\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('facebook.login').controller('FacebookLoginCtrl', /*@ngInject*/ function(fbLogin) {\n        var vm = this;\n        vm.login = login;\n\n        function login() {\n            fbLogin.go();\n        }\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('facebook.login').config(function(FacebookProvider, setting) {\n        FacebookProvider.init({\n            version: 'v2.3',\n            appId: setting.facebook.appId,\n            locale: 'pt_BR'\n        });\n    });\n})();\n(function() {\n    'use strict';\n    angular.module('core.user', ['satellizer']);\n})();\n(function() {\r\n    'use strict';\r\n    /* global window */\r\n    angular.module('core.user').service('$User', /*@ngInject*/ function($rootScope, $state, $http, $auth, $timeout, $user, $menu, $page, $window, setting) {\r\n        /**\r\n         * @ngdoc service\r\n         * @name core.user.service:$User\r\n         * @description\r\n         * Model de usuário\r\n         * @param {object} params propriedades da instância\r\n         * @param {bool} alert aviso de boas vindas\r\n         * @param {string} message mensagem do aviso\r\n         **/\r\n        var User = function(params, alert, message) {\r\n                /**\r\n                 * @ngdoc object\r\n                 * @name core.user.service:$User#params\r\n                 * @propertyOf core.user.service:$User\r\n                 * @description\r\n                 * Propriedades da instância\r\n                 **/\r\n                params = params ? params : {};\r\n                /**\r\n                 * @ngdoc object\r\n                 * @name core.user.service:$User#currentData\r\n                 * @propertyOf core.user.service:$User\r\n                 * @description\r\n                 * Armazena dados customizados na instância do usuário\r\n                 **/\r\n                this.currentData = {};\r\n                /**\r\n                 * @ngdoc object\r\n                 * @name core.user.service:$User#sessionData\r\n                 * @propertyOf core.user.service:$User\r\n                 * @description\r\n                 * Armazena dados customizados no localStorage do usuário\r\n                 **/\r\n                this.sessionData = {};\r\n                this.init(params, alert, message);\r\n            }\r\n            /**\r\n             * @ngdoc function\r\n             * @name core.user.service:$User:init\r\n             * @methodOf core.user.service:$User\r\n             * @description\r\n             * Inicialização\r\n             * @param {object} params propriedades da instância\r\n             * @param {bool} alert aviso de boas vindas\r\n             * @param {string} message mensagem do aviso\r\n             */\r\n        User.prototype.init = function(params, alert, message) {\r\n            //set params\r\n            if (typeof params === 'object') {\r\n                angular.extend(this, params);\r\n            }\r\n            if (params._id) {\r\n                var gender = (params.profile && params.profile.gender === 'F') ? 'a' : 'o',\r\n                    roleForCompany = false;\r\n                if ($user.setting.roleForCompany != 'user') roleForCompany = $user.setting.roleForCompany;\r\n                if (roleForCompany && params[roleForCompany].role ? params[roleForCompany].role.length : params.role.length) {\r\n                    this.current('company', getCompany(this));\r\n                    this.current('companies', getCompanies(this));\r\n                }\r\n                if (!message) message = 'Olá ' + params.profile.firstName + ', você entrou. Bem vind' + gender + ' de volta.';\r\n                if (alert) $page.toast(message, 10000);\r\n                if (this.session('company') && this.session('company')._id) {\r\n                    this.current('company', this.filterCompany(this.session('company')._id));\r\n                }\r\n                setStorageUser(params);\r\n            } else {\r\n                params = getStorageUser();\r\n                if (params) return this.init(params);\r\n            }\r\n            return false;\r\n        }\r\n        /**\r\n         * @ngdoc function\r\n         * @name core.user.service:$User:current\r\n         * @methodOf core.user.service:$User\r\n         * @description\r\n         * Adiciona informações customizadas no formato chave:valor à instância corrente do usuário\r\n         * @example\r\n         * <pre>\r\n         * var user = new $User();\r\n         * user.current('company',{_id: 123456, name: 'CocaCola'})\r\n         * console.log(user.current('company')) //prints {_id: 123456, name: 'CocaCola'}\r\n         * </pre>\r\n         * @param {string} key chave\r\n         * @param {*} val valor\r\n         */\r\n        User.prototype.current = function(key, val) {\r\n            if (key && val) {\r\n                if (!this.currentData) this.currentData = {};\r\n                this.currentData[key] = val;\r\n            } else if (key) {\r\n                return this.currentData && this.currentData[key] ? this.currentData[key] : false;\r\n            }\r\n            return this.currentData;\r\n        }\r\n        /**\r\n         * @ngdoc function\r\n         * @name core.user.service:$User:session\r\n         * @methodOf core.user.service:$User\r\n         * @description\r\n         * Adiciona informações customizadas no formato chave:valor à instância corrente do usuário e ao localStorage\r\n         * @param {string} key chave\r\n         * @param {*} val valor\r\n         */\r\n        User.prototype.session = function(key, val) {\r\n            if (key && val) {\r\n                if (!this.sessionData) this.sessionData = {};\r\n                this.sessionData[key] = val;\r\n                setStorageSession(this.sessionData);\r\n            } else if (key) {\r\n                this.sessionData = getStorageSession();\r\n                return this.sessionData && this.sessionData[key] ? this.sessionData[key] : false;\r\n            }\r\n            this.sessionData = getStorageSession();\r\n            return this.sessionData;\r\n        }\r\n\r\n        /**\r\n         * @ngdoc function\r\n         * @name core.user.service:$User:filterCompany\r\n         * @methodOf core.user.service:$User\r\n         * @description\r\n         * Buscar uma empresa\r\n         * @param {string} _id id da empresa\r\n         * @return {object} objeto da empresa\r\n         */\r\n        User.prototype.filterCompany = function(_id) {\r\n            var result = false,\r\n                companies = getCompanies(this);\r\n            if (companies && companies.length) {\r\n                companies.forEach(function(row) {\r\n                    if (row.company._id === _id) {\r\n                        result = row.company;\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n\r\n        /**\r\n         * @ngdoc function\r\n         * @name core.user.service:$User:destroy\r\n         * @methodOf core.user.service:$User\r\n         * @description\r\n         * Destruir sessão do usuário\r\n         * @param {bool} alert mensagem de aviso (você saiu)\r\n         */\r\n        User.prototype.destroy = function(alert) {\r\n            $user.set({});\r\n            removeStorageSession();\r\n            removeStorageUser();\r\n            $auth.removeToken();\r\n            $auth.logout();\r\n            $page.load.done();\r\n            if (alert) $page.toast('Você saiu', 3000);\r\n            $rootScope.$emit('$UserLeft');\r\n        }\r\n        /**\r\n         * @ngdoc function\r\n         * @name core.user.service:$User:getWorkPosition\r\n         * @methodOf core.user.service:$User\r\n         * @description\r\n         * Obter a lista de cargos (@todo migrar para aplicações filhas)\r\n         * @param {string} companyid id da empresa\r\n         * @return {array} lista de cargos desejados\r\n         */\r\n        User.prototype.getWorkPosition = function(companyid) {\r\n            var result = false,\r\n                companies = getCompanies(this);\r\n            if (companies.length) {\r\n                companies.forEach(function(row) {\r\n                    if (row.company._id === companyid) {\r\n                        result = row.position;\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n        User.prototype.profileUpdate = function(profile) {\r\n            this.profile = profile;\r\n            setStorageUser(this);\r\n        }\r\n        User.prototype.getCompany = getCompany;\r\n        User.prototype.getCompanies = getCompanies;\r\n\r\n        function token() {\r\n            return $auth.getToken();\r\n        }\r\n\r\n        function getStorageUser() {\r\n            return JSON.parse(window.localStorage.getItem(setting.slug + '.user'));\r\n        }\r\n\r\n        function setStorageUser(user) {\r\n            return window.localStorage.setItem(setting.slug + '.user', JSON.stringify(user));\r\n        }\r\n\r\n        function removeStorageUser() {\r\n            window.localStorage.removeItem(setting.slug + '.user');\r\n            window.localStorage.removeItem(setting.slug + '.session_token');\r\n        }\r\n\r\n        function getStorageSession() {\r\n            return JSON.parse(window.localStorage.getItem(setting.slug + '.session'));\r\n        }\r\n\r\n        function setStorageSession(session) {\r\n            return window.localStorage.setItem(setting.slug + '.session', JSON.stringify(session));\r\n        }\r\n\r\n        function removeStorageSession() {\r\n            window.localStorage.removeItem(setting.slug + '.session');\r\n            window.localStorage.removeItem(setting.slug + '.app');\r\n        }\r\n\r\n        function getCompanies(userInstance) {\r\n            var roleForCompany = false;\r\n            if ($user.setting.roleForCompany != 'user') roleForCompany = $user.setting.roleForCompany;\r\n            return roleForCompany && userInstance[roleForCompany] ? userInstance[roleForCompany].role : userInstance.role;\r\n        }\r\n\r\n        function getCompany(userInstance) {\r\n            userInstance = userInstance ? userInstance : this;\r\n            var roleForCompany = false;\r\n            var userInstanceRoleCompany = userInstance && userInstance.role && userInstance.role.length && userInstance.role[0].company ? userInstance.role[0].company : false;\r\n            if ($user.setting.roleForCompany != 'user') roleForCompany = $user.setting.roleForCompany;\r\n            return roleForCompany ? userInstance[roleForCompany].role[0].company : userInstanceRoleCompany;\r\n        }\r\n        return User;\r\n    })\r\n\r\n\r\n})();\n(function() {\n    'use strict';\n    angular.module('core.user').provider('$user',\n        /**\n         * @ngdoc object\n         * @name core.user.$userProvider\n         * @description\n         * 2 em 1 - provém configurações e a factory (ver $get) com estados/comportamentos de usuário.\n         **/\n        /*@ngInject*/\n        function $userProvider() {\n            /**\n             * @ngdoc object\n             * @name core.user.$userProvider#_instance\n             * @propertyOf core.user.$userProvider\n             * @description\n             * Instância de usuário armazenada pelo {@link core.user.service:$User serviço}\n             **/\n            this._instance = null;\n            /**\n             * @ngdoc object\n             * @name core.user.$userProvider#_setting\n             * @propertyOf core.user.$userProvider\n             * @description\n             * Armazena configurações\n             **/\n            this._setting = {};\n            /**\n             * @ngdoc function\n             * @name core.user.$userProvider#$get\n             * @propertyOf core.user.$userProvider\n             * @description\n             * getter que vira factory pelo angular para se tornar injetável em toda aplicação\n             * @example\n             * <pre>\n             * angular.module('myApp.module').controller('MyCtrl', function($user) {\n             *      console.log($user.setting.roleForCompany);\n             *      //printa a regra para empresa\n             * })\n             * </pre>\n             * @return {object} objeto correspondente a uma Factory\n             **/\n            this.$get = this.get = function() {\n                return {\n                    instance: function() {\n                        return this._instance;\n                    },\n                    setting: this._setting,\n                    /**\n                     * @ngdoc function\n                     * @name core.user.$userProvider#set\n                     * @methodOf core.user.$userProvider\n                     * @description\n                     * Setar instância do usuário\n                     * @example\n                     * <pre>\n                     * var user = new $User();\n                     * $user.set(user);\n                     * //now user instance can be injectable\n                     * angular.module('myApp').controller('myCtrl',function($user){\n                     * console.log($user.instance()) //imprime objeto de instância do usuário\n                     * })\n                     * </pre>\n                     **/\n                    set: function(data) {\n                        this._instance = data;\n                        return data;\n                    },\n                    /**\n                     * @ngdoc function\n                     * @name core.user.$userProvider#destroy\n                     * @methodOf core.user.$userProvider\n                     * @description\n                     * Apagar instância do usuário\n                     * @example\n                     * <pre>\n                     * var user = new $User();\n                     * $user.set(user);\n                     * //now user instance can be injectable\n                     * angular.module('myApp').controller('myCtrl',function($user){\n                     * $user.instance().destroy() //apaga instância do usuário\n                     * })\n                     * </pre>\n                     **/\n                    destroy: function() {\n                        this._instance = null;\n                    }\n                }\n            }\n            this.setting = function(key, val) {\n                if (key && val) return this._setting[key] = val;\n                else if (key) return this._setting[key];\n                else return this._setting;\n            }\n        })\n})();\n(function() {\n    'use strict';\n    angular.module('core.page').provider('$page',\n        /**\n         * @ngdoc object\n         * @name core.page.$pageProvider\n         * @description\n         * Provém configurações/comportamentos/estados para página\n         **/\n        /*@ngInject*/\n        function $pageProvider() {\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_config\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena configurações\n             **/\n            this._config = {\n                // configuração para ativar/desativar a rota inicial\n                'homeEnabled': true\n            };\n\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_title\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena o título\n             **/\n            this._title = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_description\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena a descrição\n             **/\n            this._description = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogSiteName\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph site name\n             **/\n            this._ogSiteName = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogTitle\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph title\n             **/\n            this._ogTitle = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogDescription\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph description\n             **/\n            this._ogDescription = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogUrl\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph url\n             **/\n            this._ogUrl = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogImage\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph image\n             **/\n            this._ogImage = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogSection\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph section\n             **/\n            this._ogSection = '';\n            /**\n             * @ngdoc object\n             * @name core.page.$pageProvider#_ogTag\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * armazena open graph tags\n             **/\n            this._ogTag = '';\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#$get\n             * @propertyOf core.page.$pageProvider\n             * @description\n             * getter que vira factory pelo angular para se tornar injetável em toda aplicação\n             * @example\n             * <pre>\n             * angular.module('myApp.module').controller('MyCtrl', function($page) {\n             *      console.log($page.config('myOwnConfiguration'));\n             *      //prints the current config\n             *      //ex.: \"{ configA: 54, configB: '=D' }\"\n             * })\n             * </pre>\n             * @return {object} Retorna um objeto contendo valores das propriedades.\n             **/\n            this.$get = this.get = /*@ngInject*/ function($mdToast) {\n                return {\n                    config: this._config,\n                    load: load(),\n                    progress: progress(),\n                    toast: toast($mdToast),\n                    title: title,\n                    description: description,\n                    ogLocale: ogLocale,\n                    ogSiteName: ogSiteName,\n                    ogTitle: ogTitle,\n                    ogDescription: ogDescription,\n                    ogUrl: ogUrl,\n                    ogImage: ogImage,\n                    ogSection: ogSection,\n                    ogTag: ogTag\n                }\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#config\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/setter para configurações\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($pageProvider) {\n             *     $pageProvider.config('myOwnConfiguration', {\n             *          configA: 54,\n             *          configB: '=D'\n             *      })\n             * })\n             * </pre>\n             * @param {string} key chave\n             * @param {*} val valor\n             **/\n            this.config = function(key, val) {\n                if (key && (val || val === false)) {\n                    return this._config[key] = val\n                } else if (key) {\n                    return this._config[key]\n                } else {\n                    return this._config\n                }\n            }\n\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#title\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para meta tag título\n             * @param {string} str título da página\n             * @return {string} título da página\n             **/\n            function title(value) {\n                if (value) return this._title = value;\n                else return this._title;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#description\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para meta tag descrição\n             * @param {string} value descrição da página\n             **/\n            function description(value) {\n                if (value) return this._description = value;\n                else return this._description;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogLocale\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph locale\n             * @param {string} value locale\n             **/\n            function ogLocale(value) {\n                if (value) return this._ogLocale = value;\n                else return this._ogLocale;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogSiteName\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph site name\n             * @param {string} value site name\n             **/\n            function ogSiteName(value) {\n                if (value) return this._ogSiteName = value;\n                else return this._ogSiteName;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogTitle\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph title\n             * @param {string} value title\n             **/\n            function ogTitle(value) {\n                if (value) return this._ogTitle = value;\n                else return this._ogTitle;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogDescription\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph description\n             * @param {string} value description\n             **/\n            function ogDescription(value) {\n                if (value) return this._ogDescription = value;\n                else return this._ogDescription;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogUrl\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph url\n             * @param {string} value url\n             **/\n            function ogUrl(value) {\n                if (value) return this._ogUrl = value;\n                else return this._ogUrl;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogImage\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph image\n             * @param {string} value image\n             **/\n            function ogImage(value) {\n                if (value) return this._ogImage = value;\n                else return this._ogImage;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogSection\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph section\n             * @param {string} value section\n             **/\n            function ogSection(value) {\n                if (value) return this._ogSection = value;\n                else return this._ogSection;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#ogTag\n             * @methodOf core.page.$pageProvider\n             * @description\n             * getter/getter para open-graph tag\n             * @param {string} value tag\n             **/\n            function ogTag(value) {\n                if (value) return this._ogTag = value;\n                else return this._ogTag;\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#load\n             * @methodOf core.page.$pageProvider\n             * @description\n             * inicia e termina o carregamento da página\n             * @return {object} com metodos de inicialização (init) e finalização (done)\n             **/\n            function load() {\n                return {\n                    init: function() {\n                        this.status = true;\n                        //console.log('loader iniciado...' + this.status);\n                    },\n                    done: function() {\n                        this.status = false;\n                        //console.log('loader finalizado...' + this.status);\n                    }\n                }\n            }\n            /**\n             * @ngdoc function\n             * @name core.page.$pageProvider#toast\n             * @methodOf core.page.$pageProvider\n             * @description\n             * mostra uma mensagem de aviso\n             * @param {string} msg mensagem\n             * @param {integer} time tempo em milisegundos\n             * @param {string} position posição do alerta. default: 'bottom right'\n             **/\n            function toast($mdToast) {\n                return function(msg, time, position) {\n                    time = time ? time : 5000;\n                    $mdToast.show($mdToast.simple().content(msg).position(position ? position : 'bottom right').hideDelay(time));\n                }\n            }\n            //another type of load\n            function progress() {\n                return {\n                    init: function() {\n                        this.status = true;\n                        //console.log('progress iniciado...' + this.status);\n                    },\n                    done: function() {\n                        this.status = false;\n                        //console.log('progress finalizado...' + this.status);\n                    }\n                }\n            }\n        }\n    )\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu', ['ui.router', 'truncate']);\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').filter('nospace', /*@ngInject*/ function() {\n        return function(value) {\n            return (!value) ? '' : value.replace(/ /g, '');\n        }\n    });\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').directive('menuToggle', /*@ngInject*/ function() {\n        return {\n            scope: {\n                section: '='\n            },\n            templateUrl: 'app/core/page/menu/menuToggle.tpl.html',\n            link: function($scope, $element) {\n                var controller = $element.parent().controller();\n                $scope.isOpen = function() {\n                    return controller.menu.isOpen($scope.section);\n                };\n                $scope.toggle = function() {\n                    controller.menu.toggleOpen($scope.section);\n                };\n                var parentNode = $element[0].parentNode.parentNode.parentNode;\n                if (parentNode.classList.contains('parent-list-item')) {\n                    var heading = parentNode.querySelector('h2');\n                    $element[0].firstChild.setAttribute('aria-describedby', heading.id);\n                }\n            }\n        }\n    });\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').directive('menuLink', /*@ngInject*/ function() {\n        return {\n            scope: {\n                section: '='\n            },\n            controller: 'MenuLinkCtrl',\n            controllerAs: 'vm',\n            templateUrl: 'app/core/page/menu/menuLink.tpl.html',\n            link: function($scope, $element) {\n                var controller = $element.parent().controller();\n                $scope.isSelected = function() {\n                    return controller.menu ? controller.menu.isSelected($scope.section) : '';\n                };\n            }\n        };\n    });\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').controller('MenuLinkCtrl', /*@ngInject*/ function($state) {\n        var vm = this;\n        vm.state = $state;\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').filter('menuHuman', /*@ngInject*/ function menuHuman() {\n        return function(doc) {\n            if (!doc) return;\n            if (doc.type === 'directive') {\n                return doc.name.replace(/([A-Z])/g, function($1) {\n                    return '-' + $1.toLowerCase();\n                });\n            }\n            return doc.label || doc.name;\n        }\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').provider('$menu',\n        /**\n         * @ngdoc object\n         * @name core.menu.$menuProvider\n         * @description\n         * 2 em 1 - provém configurações e a factory (ver $get) com estados/comportamentos de menu.\n         **/\n        /*@ngInject*/\n        function $menuProvider() {\n            var instance = this;\n            /**\n             * @ngdoc object\n             * @name core.menu.$menuProvider#mainMenu\n             * @propertyOf core.menu.$menuProvider\n             * @description\n             * Armazena o menu principal\n             **/\n            this.mainMenu = [];\n            /**\n             * @ngdoc object\n             * @name core.menu.$menuProvider#toolbarMenu\n             * @propertyOf core.menu.$menuProvider\n             * @description\n             * Armazena o menu para a toolbar\n             **/\n            this.toolbarMenu = [];\n            /**\n             * @ngdoc function\n             * @name core.menu.$menuProvider#$get\n             * @propertyOf core.menu.$menuProvider\n             * @description\n             * getter que vira factory pelo angular para se tornar injetável em toda aplicação\n             * @example\n             * <pre>\n             * angular.module('myApp.module').controller('MyCtrl', function($menu) {\n             *      console.log($menu.main); //printa array contendo itens do menu principal\n             *      $menu.api().close() //fecha o menu\n             * })\n             * </pre>\n             * @return {object} Retorna um objeto correspondente a uma Factory\n             **/\n            this.$get = this.get = /*@ngInject*/ function($rootScope, $mdSidenav) {\n                return {\n                    main: this.mainMenu,\n                    toolbar: this.toolbarMenu,\n                    api: api(instance, $rootScope, $mdSidenav)\n                }\n            }\n            /**\n             * @ngdoc function\n             * @name core.menu.$menuProvider#set\n             * @methodOf core.menu.$menuProvider\n             * @description\n             * Adicionar um novo menu\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($menuProvider) {\n             *     $menuProvider.set({\n             *         name: 'Conta',\n             *         type: 'link',\n             *         icon: 'fa fa-at',\n             *         url: '/account/',\n             *         state: 'app.account'\n             *     });\n             * })\n             * </pre>\n             * @param {object} menu objeto contendo as propriedades do menu\n             **/\n            this.set = function(menu) {\n                this.mainMenu.push(menu);\n            }\n            /**\n             * @ngdoc function\n             * @name core.menu.$menuProvider#setToolbar\n             * @methodOf core.menu.$menuProvider\n             * @description\n             * Adicionar um novo menu no toolbar\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($menuProvider) {\n             *     $menuProvider.setToolbar({\n             *         name: 'Conta',\n             *         type: 'link',\n             *         icon: 'fa fa-at',\n             *         url: '/account/',\n             *         state: 'app.account'\n             *     });\n             * })\n             * </pre>\n             * @param {object} menu objeto contendo as propriedades do menu\n             **/\n            this.setToolbar = function(menu) {\n                this.toolbarMenu.push(menu);\n            }\n            /**\n             * @ngdoc function\n             * @name core.menu.$menuProvider#api\n             * @methodOf core.menu.$menuProvider\n             * @example\n             * <pre>\n             * angular.module('myApp.module').controller('MyCtrl', function($menu) {\n             *      $menu.api().open() //abre o menu\n             *      $menu.api().close() //fecha o menu\n             * })\n             * </pre>\n             * @return {object} comportamentos do menu\n             **/\n            function api(instance, $rootScope, $mdSidenav) {\n                return function api() {\n                    return {\n                        openedSection: false,\n                        currentPage: null,\n                        open: function() {\n                            $rootScope.$emit('AppMenuOpened');\n                            $mdSidenav('left').open();\n                        },\n                        close: function() {\n                            $rootScope.$emit('AppMenuClosed');\n                            $mdSidenav('left').close();\n                        },\n                        //sections: sampleMenu(),\n                        sections: instance.mainMenu,\n                        selectSection: function(section) {\n                            this.openedSection = section;\n                        },\n                        toggleSelectSection: function(section) {\n                            this.openedSection = (this.openedSection === section ? false : section);\n                        },\n                        isChildSectionSelected: function(section) {\n                            return this.openedSection === section;\n                        },\n                        isSectionSelected: function(section) {\n                            var selected = false;\n                            var openedSection = this.openedSection;\n                            if (openedSection === section) {\n                                selected = true;\n                            } else if (section.children) {\n                                section.children.forEach(function(childSection) {\n                                    if (childSection === openedSection) {\n                                        selected = true;\n                                    }\n                                });\n                            }\n                            return selected;\n                        },\n                        selectPage: function(section, page) {\n                            //page && page.url && $location.path(page.url);\n                            this.currentSection = section;\n                            this.currentPage = page;\n                        },\n                        isPageSelected: function(page) {\n                            return this.currentPage === page;\n                        },\n                        isOpen: function(section) {\n                            return this.isSectionSelected(section);\n                        },\n                        toggleOpen: function(section) {\n                            return this.toggleSelectSection(section);\n                        },\n                        isSelected: function(page) {\n                            return this.isPageSelected(page);\n                        }\n                    }\n                }\n            }\n            //\n            // MENU SECTIONS SAMPLE\n            //\n            /*function sampleMenu() {\n                return [\n                    {\n                    name: 'API Reference',\n                    type: 'heading',\n                    //iconSvg: 'ic_dashboard',\n                    icon: 'fa fa-dashboard',\n                    children: [{\n                        name: 'Layout',\n                        type: 'toggle',\n                        pages: [{\n                            name: 'Container Elements',\n                            id: 'layoutContainers',\n                            url: '/layout/container'\n                        }, {\n                            name: 'Grid System',\n                            id: 'layoutGrid',\n                            url: '/layout/grid'\n                        }, {\n                            name: 'Child Alignment',\n                            id: 'layoutAlign',\n                            url: '/layout/alignment'\n                        }, {\n                            name: 'Options',\n                            id: 'layoutOptions',\n                            url: '/layout/options'\n                        }]\n                    }, {\n                        name: 'Services',\n                        pages: [],\n                        type: 'toggle'\n                    }, {\n                        name: 'Directives',\n                        pages: [],\n                        type: 'toggle'\n                    }]\n                }*/\n            /*  {\n                    name: 'Finalizar pedido',\n                    url: '/checkout',\n                    type: 'link'\n                }, \n*/\n            /*{\n                        name: 'Produtos',\n                        type: 'toggle',\n                        icon: 'fa fa-diamond',\n                        pages: [{\n                            name: 'Pulseira A',\n                            id: 'pulseira-a',\n                            url: '/produtos/pulseira-a'\n                        }, {\n                            name: 'Pulseira B',\n                            id: 'pulseira-b',\n                            url: '/produtos/pulseira-b'\n                        }, {\n                            name: 'Pulseira C',\n                            id: 'pulseira-c',\n                            url: '/produtos/pulseira-c'\n                        }]\n\n                    }\n                    ,\n                    {\n                        name: 'Políticas',\n                        type: 'toggle',\n                        icon: 'fa fa-file-text-o',\n                        pages: [{\n                            name: 'Termo de compromisso',\n                            id: 'termo',\n                            url: '/termo'\n                        }, {\n                            name: 'Política de privacidade',\n                            id: 'privacidade',\n                            url: '/privacidade'\n                        }, ]\n                    }, {\n                        name: 'Sobre',\n                        type: 'toggle',\n                        icon: 'fa fa-briefcase',\n                        pages: [{\n                            name: 'Quem somos',\n                            id: 'quemSomos',\n                            url: '/quem-somos'\n                        }]\n                    }\n                ];\n            }*/\n        })\n\n})();\n(function() {\n    'use strict';\n    angular.module('core.menu').config( /*@ngInject*/ function() {})\n})();\n(function() {\n    'use strict';\n    angular.module('core.app', [\n        'ngAnimate',\n        'ngCookies',\n        'ngTouch',\n        'ngSanitize',\n        'ngMessages',\n        'ngAria',\n        'satellizer',\n        'angulartics',\n        'angulartics.google.analytics',\n        'ui.router',\n        'ngMaterial',\n        'toastr',\n        'app.setting',\n        'app.env',\n        // 'core.utils',\n        // 'core.home',\n        'core.page',\n        'core.login',\n        'core.user',\n        // 'core.profile',\n        // 'core.account',\n        // 'core.list'\n    ]);\n})();\n(function() {\r\n    'use strict';\r\n    /* global moment */\r\n    /**\r\n     * @ngdoc object\r\n     * @name app.kit.controller:$AppCtrl\r\n     * @description\r\n     * Controlador da aplicação\r\n     * @requires setting\r\n     * @requires environment\r\n     * @requires $rootScope\r\n     * @requires $scope\r\n     * @requires $state\r\n     * @requires $location\r\n     * @requires $mdSidenav\r\n     * @requires $timeout\r\n     * @requires $auth\r\n     * @requires core.page.factory:$page\r\n     * @requires core.user.service:$User\r\n     * @requires core.user.factory:$user\r\n     * @requires core.login.$loginProvider\r\n     * @requires core.page.factory:$menu\r\n     **/\r\n    angular.module('core.app').controller('$AppCtrl', /*@ngInject*/ function(setting, $rootScope, $scope, $state, $location, $mdSidenav, $timeout, $auth, $page, $User, $user, enviroment, $menu, $login, $app) {\r\n        // var vm = this;\r\n        // vm.enviroment = enviroment;\r\n        // //\r\n        // // SEO\r\n        // //\r\n        // $page.title(setting.title);\r\n        // $page.description(setting.description);\r\n        // //\r\n        // // OPEN GRAPH\r\n        // //\r\n        // $page.ogLocale(setting.ogLocale);\r\n        // $page.ogSiteName(setting.ogSiteName);\r\n        // $page.ogTitle(setting.ogTitle);\r\n        // $page.ogDescription(setting.ogDescription);\r\n        // $page.ogUrl(setting.ogUrl);\r\n        // $page.ogImage(setting.ogImage);\r\n        // $page.ogSection(setting.ogSection);\r\n        // $page.ogTag(setting.ogTag);\r\n        // //\r\n        // // Moment\r\n        // //\r\n        // moment.locale('pt_BR');\r\n        // //\r\n        // // Events\r\n        // //  \r\n        // $rootScope.$on('$AppReboot', function() {\r\n        //     bootstrap();\r\n        // });\r\n        // $rootScope.$on('$CompanyIdUpdated', function(e, nv, ov) {\r\n        //     if (nv != ov) {\r\n        //         //quando alterar company, atualizar factory  \r\n        //         var company = $user.instance().filterCompany(nv);\r\n        //         $user.instance().current('company', company);\r\n        //         $user.instance().session('company', {\r\n        //             _id: company._id,\r\n        //             name: company.name\r\n        //         });\r\n        //         $menu.api().close();\r\n        //         bootstrap();\r\n        //     }\r\n        // });\r\n        // $rootScope.$on('$Unauthorized', function(ev, status) {\r\n        //     //\r\n        //     // Persistir o local atual\r\n        //     // para redirecionamento após o login\r\n        //     // - somente se status 401\r\n        //     //\r\n        //     if (status === 401) {\r\n        //         $app.storage('session').set({\r\n        //             locationRedirect: $location.url()\r\n        //         });\r\n        //     }\r\n        //     $rootScope.$Unauthorized = true;\r\n        //     var userInstance = $user.instance();\r\n        //     if (typeof userInstance.destroy === 'function') $user.instance().destroy();\r\n        // });\r\n        // //\r\n        // // Comportamentos para quando o usuário entrar\r\n        // //\r\n        // $rootScope.$on('$LoginSuccess', function(ev, response) {\r\n        //     //\r\n        //     // Redirecionar usuario para alguma rota pre-estabelecida\r\n        //     //\r\n        //     var appSession = $app.storage('session').get();\r\n        //     if (appSession && appSession.locationRedirect && appSession.locationRedirect != '/login/') {\r\n        //         //\r\n        //         // Redirecionar o caboclo\r\n        //         //\r\n        //         $location.path(appSession.locationRedirect);\r\n        //         //\r\n        //         // Resetar o locationRedirect\r\n        //         //\r\n        //         $app.storage('session').set({\r\n        //             locationRedirect: ''\r\n        //         })\r\n        //     }\r\n        //     //\r\n        //     // Zerar o $rootScope.$Unauthorized\r\n        //     //\r\n        //     $rootScope.$Unauthorized = false;\r\n        // });\r\n        // //\r\n        // // BOOTSTRAP\r\n        // //  \r\n        // bootstrap(true);\r\n\r\n        // function bootstrap(withUser) {\r\n        //     //nonWww2www();\r\n        //     //http2https(); //@bug - bug com _escaped_fragment_\r\n        //     if (withUser) {\r\n        //         var newUser = new $User();\r\n        //         $user.set(newUser);\r\n        //     }\r\n        //     vm.user = $user.instance();\r\n        //     vm.$page = $page;\r\n        //     vm.setting = setting;\r\n        //     vm.year = moment().format('YYYY');\r\n        //     vm.state = $state;\r\n        //     vm.isAuthed = $auth.isAuthenticated;\r\n        //     vm.logout = logout;\r\n        //     vm.menu = $menu.api();\r\n        //     vm.loginConfig = $login.config;\r\n        //     vm.iframe = $location.hash() === 'iframe' ? true : false;\r\n        //     vm.logo = $app.logo;\r\n        //     vm.logoWhite = $app.logoWhite;\r\n        // }\r\n        // //\r\n        // // Behaviors\r\n        // //\r\n        // function logout() {\r\n        //     $mdSidenav('left').close();\r\n        //     $timeout(function() {\r\n        //         var userInstance = $user.instance();\r\n        //         if (typeof userInstance.destroy === 'function') $user.instance().destroy(true);\r\n        //         bootstrap(true);\r\n        //     }, 500);\r\n        // }\r\n        // //\r\n        // // Redirect http to https //@bug - bug com _escaped_fragment_ - redirecionando via CF\r\n        // // https://github.com/esgrupo/livejob/issues/15\r\n        // //\r\n        // // function http2https() {\r\n        // //     //tenho https configurado\r\n        // //     if (setting.https.length) {\r\n        // //         //host esta na configuração\r\n        // //         if (_.indexOf(setting.https, $location.host().replace(/www./g, '')) != -1) {\r\n        // //             //protocolo atual não é seguro            \r\n        // //             if ($location.protocol() !== 'https') {\r\n        // //                 //estou na home #15 bug com _escaped_fragment_\r\n        // //                 if ($state.current.name === 'app.home') {\r\n        // //                     //bingo\r\n        // //                     $window.location.href = $location.absUrl().replace(/http/g, 'https');\r\n        // //                 }\r\n        // //             }\r\n        // //         }\r\n        // //     }\r\n        // // }\r\n        // //\r\n        // // Redirect non-www to www\r\n        // // https://github.com/esgrupo/livejob/issues/17\r\n        // //\r\n        // function nonWww2www() {\r\n        //     //redirecionar www\r\n        //     if (setting.redirWww) {\r\n        //         //se estiver em produção\r\n        //         if (enviroment === 'production') {\r\n        //             if (!hasWww()) {\r\n        //                 $window.location.href = 'https://www.' + $location.host() + $location.path();\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        // function hasWww() {\r\n        //     var www = new RegExp(\"www.\");\r\n        //     return www.test($location.host());\r\n        // }\r\n    })\r\n})();\n// (function() {\n//     'use strict';\n\n//     angular\n//         .module('core.app')\n//         .controller('MainController', MainController);\n\n//     /** @ngInject */\n//     function MainController() {\n//         var vm = this;\n//         vm.techs = [{\n//             title: 'MongoDB',\n//             desc: 'Banco de dados orientado a documentos - NoSQL',\n//             logo: 'mongodb.png'\n//         }, {\n//             title: 'Express',\n//             desc: 'Framework para Node.js. Flexível e robusto para desenvolver aplicações web.',\n//             logo: 'express.png'\n//         }, {\n//             title: 'AngularJS',\n//             desc: 'Framework Javascript para criação de aplicações single-page',\n//             logo: 'angular.png'\n//         }, {\n//             title: 'Node.js',\n//             desc: 'Plataforma baseada em Javascript para construir aplicações de rede rápidas e escaláveis',\n//             logo: 'node.png'\n//         }];\n//     }\n// })();\n(function() {\n    'use strict';\n    angular.module('core.app').provider('$app',\n        /**\n         * @ngdoc object\n         * @name app.kit.$appProvider\n         * @description\n         * Provém configurações para aplicação\n         **/\n        /*@ngInject*/\n        function $appProvider($stateProvider) {\n            /**\n             * @ngdoc object\n             * @name app.kit.$appProvider#_config\n             * @propertyOf app.kit.$appProvider\n             * @description\n             * armazena configurações\n             **/\n            this._config = {};\n\n            /**\n             * @ngdoc object\n             * @name app.kit.$appProvider#_layoutUrl\n             * @propertyOf app.kit.$appProvider\n             * @description\n             * url do template para layout\n             **/\n            this._layoutUrl = 'app/core/page/layout/layout.tpl.html';\n\n            /**\n             * @ngdoc object\n             * @name app.kit.$appProvider#_toolbarUrl\n             * @propertyOf app.kit.$appProvider\n             * @description\n             * url do template para toolbar\n             **/\n            this._toolbarUrl = 'app/core/page/toolbar/toolbar.tpl.html';\n\n            /**\n             * @ngdoc object\n             * @name app.kit.$appProvider#_toolbarTitleUrl\n             * @propertyOf app.kit.$appProvider\n             * @description\n             * url do template para o toolbar title\n             **/\n            this._toolbarTitleUrl = 'app/core/page/toolbar/title/toolbarTitle.tpl.html';\n\n            /**\n             * @ngdoc object\n             * @name app.kit.$appProvider#_sidenavUrl\n             * @propertyOf app.kit.$appProvider\n             * @description\n             * url do template para sidenav\n             **/\n            this._sidenavUrl = 'app/core/page/menu/sidenav.tpl.html';\n\n            /**\n             * @ngdoc object\n             * @name app.kit.$appProvider#_logo\n             * @propertyOf app.kit.$appProvider\n             * @description\n             * armazena logo\n             **/\n            this._logo = '';\n\n            /**\n             * @ngdoc object\n             * @name app.kit.$appProvider#_logoWhite\n             * @propertyOf app.kit.$appProvider\n             * @description\n             * armazena logo na versão branca\n             **/\n            this._logoWhite = '';\n\n            /**\n             * @ngdoc function\n             * @name app.kit.$appProvider#$get\n             * @propertyOf app.kit.$appProvider\n             * @description\n             * getter que vira factory pelo angular para se tornar injetável em toda aplicação\n             * @example\n             * <pre>\n             * angular.module('myApp.module').controller('MyCtrl', function($app) {\n             *      console.log($app.layoutUrl);\n             *      //prints the default layoutUrl\n             *      //ex.: \"app/core/page/layout/layout.tpl.html\"\n             *      console.log($app.config('myOwnConfiguration'));\n             *      //prints the current config\n             *      //ex.: \"{ configA: 54, configB: '=D' }\"\n             * })\n             * </pre>\n             * @return {object} Retorna um objeto contendo valores das propriedades.\n             **/\n            this.$get = this.get = /*@ngInject*/ function($window, setting) {\n                return {\n                    config: this._config,\n                    layoutUrl: this._layoutUrl,\n                    toolbarUrl: this._toolbarUrl,\n                    toolbarTitleUrl: this._toolbarTitleUrl,\n                    sidenavUrl: this._sidenavUrl,\n                    logoWhite: this._logoWhite,\n                    logo: this._logo,\n                    /**\n                     * @ngdoc method\n                     * @name app.kit.$appProvider#storage\n                     * @methodOf app.kit.$appProvider\n                     * @description\n                     * Carregar/persistir dados\n                     * @param {string} type tipo da persistência (local/session)\n                     * @return {object} getter/setter para persistência de dados\n                     **/\n                    storage: function(type) {\n                        var where = (type === 'local') ? 'localStorage' : 'sessionStorage';\n                        return {\n                            set: function(item) {\n                                return $window[where].setItem(setting.slug + '.app', angular.toJson(item));\n                            },\n                            get: function() {\n                                return angular.fromJson($window[where].getItem(setting.slug + '.app'));\n                            },\n                            destroy: function() {\n                                $window[where].removeItem(setting.slug + '.app');\n                            }\n                        }\n                    }\n                }\n            }\n\n            /**\n             * @ngdoc function\n             * @name app.kit.$appProvider#config\n             * @methodOf app.kit.$appProvider\n             * @description\n             * getter/setter para configurações\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($appProvider) {\n             *     $appProvider.config('myOwnConfiguration', {\n             *          configA: 54,\n             *          configB: '=D'\n             *      })\n             * })\n             * </pre>\n             * @param {string} key chave\n             * @param {*} val valor\n             **/\n            this.config = function(key, val) {\n                if (val) return this._config[key] = val;\n                else return this._config[key];\n            }\n\n            /**\n             * @ngdoc function\n             * @name app.kit.$appProvider#logo\n             * @methodOf app.kit.$appProvider\n             * @description\n             * getter/setter para o path da logo\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($appProvider) {\n             *     $appProvider.logo('assets/images/my-logo.png')\n             * })\n             * </pre>\n             * @param {string} value caminho para logomarca\n             **/\n            this.logo = function(value) {\n                if (value) return this._logo = value;\n                else return this._logo;\n            }\n\n            /**\n             * @ngdoc function\n             * @name app.kit.$appProvider#logoWhite\n             * @methodOf app.kit.$appProvider\n             * @description\n             * getter/setter para o path da logo na versão branca\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($appProvider) {\n             *     $appProvider.logoWhite('assets/images/my-logo.png')\n             * })\n             * </pre>\n             * @param {string} value caminho para logomarca\n             **/\n            this.logoWhite = function(value) {\n                if (value) return this._logoWhite = value;\n                else return this._logoWhite;\n            }\n\n            /**\n             * @ngdoc function\n             * @name app.kit.$appProvider#layoutUrl\n             * @methodOf app.kit.$appProvider\n             * @description\n             * getter/setter para url do layout\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($appProvider) {\n             *      $appProvider.layoutUrl('app/layout/my-layout.html')\n             * })\n             * </pre>\n             * @param {string} val url do template\n             **/\n            this.layoutUrl = function(val) {\n                if (val) return this._layoutUrl = val;\n                else return this._layoutUrl;\n            }\n\n            /**\n             * @ngdoc function\n             * @name app.kit.$appProvider#toolbarUrl\n             * @methodOf app.kit.$appProvider\n             * @description\n             * getter/setter para url do toolbar\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($appProvider) {\n             *      $appProvider.toolbarUrl('app/layout/my-toolbar.html')\n             * })\n             * </pre>\n             * @param {string} val url do template\n             **/\n            this.toolbarUrl = function(val) {\n                if (val) return this._toolbarUrl = val;\n                else return this._toolbarUrl;\n            }\n\n            /**\n             * @ngdoc function\n             * @name app.kit.$appProvider#toolbarTitleUrl\n             * @methodOf app.kit.$appProvider\n             * @description\n             * getter/setter para url do componente toolbar-title\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($appProvider) {\n             *      $appProvider.toolbarUrl('app/layout/my-toolbar.html')\n             * })\n             * </pre>\n             * @param {string} val url do template\n             **/\n            this.toolbarTitleUrl = function(val) {\n                if (val) return this._toolbarTitleUrl = val;\n                else return this._toolbarTitleUrl;\n            }\n\n            /**\n             * @ngdoc function\n             * @name app.kit.$appProvider#sidenavUrl\n             * @methodOf app.kit.$appProvider\n             * @description\n             * getter/setter para url do sidenav\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($appProvider) {\n             *      $appProvider.sidenavUrl('app/layout/my-sidenav.html')\n             * })\n             * </pre>\n             * @param {string} val url do template\n             **/\n            this.sidenavUrl = function(val) {\n                if (val) return this._sidenavUrl = val;\n                else return this._sidenavUrl;\n            };\n        }\n    )\n})();\n(function() {\n    'use strict';\n    angular.module(\"app.env\", []).constant(\"enviroment\", \"development\").constant(\"api\", {\n        url: \"http://localhost:9000\"\n    });\n})();\n// (function() {\n//     'use strict';\n\n//     angular\n//         .module('mtdaDe')\n//         .config(config);\n\n//     /** @ngInject */\n//     function config($logProvider, $appProvider, toastrConfig) {\n\n//         /**\n//          * App Config\n//          */\n//         $appProvider.layoutUrl('app/layout/layout.tpl.html');\n//         // $appProvider.toolbarUrl('app/layout/toolbar-default.tpl.html');\n//         //$appProvider.toolbarTitleUrl('app/layout/toolbarTitle.tpl.html');\n//         // $appProvider.sidenavUrl('app/layout/sidenav.tpl.html');\n//         // $appProvider.logoWhite('https://livejob.s3.amazonaws.com/livejob-white.png');\n\n//         //\n//         // GULP-ANGULAR DEFAULT\n//         //\n\n//         // Enable log\n//         $logProvider.debugEnabled(true);\n\n//         // Set options third-party lib\n//         toastrConfig.allowHtml = true;\n//         toastrConfig.timeOut = 3000;\n//         toastrConfig.positionClass = 'toast-top-right';\n//         toastrConfig.preventDuplicates = true;\n//         toastrConfig.progressBar = true;\n//     }\n\n// })();\n(function() {\n    'use strict';\n    /**\n     * @ngdoc object\n     * @name core.login.controller:$LostCtrl\n     * @requires core.page.factory:$page\n     * @requires setting\n     * @requires api\n     **/\n    angular.module('core.login').controller('$LostCtrl', /*@ngInject*/ function($state, $auth, $http, $mdToast, $location, $page, setting, api) {\n        $page.title(setting.name + setting.titleSeparator + 'Mudar senha');\n        $page.description('Entre para o ' + setting.name);\n        $page.load.done();\n        var vm = this;\n        vm.lost = lost;\n        vm.change = change;\n        //lost password step2\n        var userHash = $location.hash();\n        if (userHash) vm.userHash = userHash;\n        /**\n         * @ngdoc function\n         * @name core.login.controller:$LostCtrl#change\n         * @methodOf core.login.controller:$LostCtrl\n         * @description\n         * Alterar senha\n         * @param {string} pw senha\n         **/\n        function change(pw) {\n            $page.load.init();\n            var onSuccess = function(data) {\n                $page.load.done();\n                $state.transitionTo('app.login');\n                $mdToast.show($mdToast.simple().content(data.success).position('bottom right').hideDelay(3000))\n            }\n            var onError = function(data) {\n                $page.load.done();\n                $mdToast.show($mdToast.simple().content(data.error).position('bottom right').hideDelay(3000))\n            }\n            $http.put(api.url + \"/api/users/\" + userHash + '/newPassword', {\n                password: pw\n            }).success(onSuccess).error(onError);\n        }\n        /**\n         * @ngdoc function\n         * @name core.login.controller:$LostCtrl#lost\n         * @methodOf core.login.controller:$LostCtrl\n         * @description\n         * Link para alteração de senha\n         * @param {string} email email\n         **/\n        function lost(email) {\n            $page.load.init();\n            var onSuccess = function(data) {\n                $page.load.done();\n                $mdToast.show($mdToast.simple().content(data.success).position('bottom right').hideDelay(3000))\n            }\n            var onError = function(data) {\n                $page.load.done();\n                $mdToast.show($mdToast.simple().content(data.error).position('bottom right').hideDelay(3000))\n            }\n            $http.post(api.url + \"/api/users/lost\", {\n                email: email\n            }).success(onSuccess).error(onError);\n        }\n    })\n})();\n(function() {\r\n    'use strict';\r\n    /**\r\n     * @ngdoc object\r\n     * @name core.login.controller:$LogoutCtrl\r\n     * @description\r\n     * Destruir sessão\r\n     * @requires core.login.$user\r\n     **/\r\n    angular.module('core.login').controller('$LogoutCtrl', /*@ngInject*/ function($user) {\r\n        var userInstance = $user.instance();\r\n        if (typeof userInstance.destroy === 'function') $user.instance().destroy();\r\n    })\r\n})();\n(function() {\n    'use strict';\n    angular.module('core.login').provider('$login',\n        /**\n         * @ngdoc object\n         * @name core.login.$loginProvider\n         **/\n        /*@ngInject*/\n        function $loginProvider() {\n            /**\n             * @ngdoc object\n             * @name core.login.$loginProvider#_config\n             * @propertyOf core.login.$loginProvider\n             * @description\n             * armazena configurações\n             **/\n            this._config = {};\n            /**\n             * @ngdoc object\n             * @name core.login.$loginProvider#_templateUrl\n             * @propertyOf core.login.$loginProvider\n             * @description\n             * url do template para a rota\n             **/\n            this._templateUrl = 'app/core/login/login.tpl.html';\n            /**\n             * @ngdoc object\n             * @name core.login.$loginProvider#_signupTemplateUrl\n             * @propertyOf core.login.$loginProvider\n             * @description\n             * url do template para novos cadastros\n             **/\n            this._signupTemplateUrl = 'app/core/login/register/register.tpl.html';\n            /**\n             * @ngdoc object\n             * @name core.login.$loginProvider#_lostTemplateUrl\n             * @propertyOf core.login.$loginProvider\n             * @description\n             * url do template para recuperação de senha\n             **/\n            this._lostTemplateUrl = 'app/core/login/register/lost.tpl.html';\n            /**\n             * @ngdoc function\n             * @name core.login.$loginProvider#$get\n             * @propertyOf core.login.$loginProvider\n             * @description\n             * getter que vira factory pelo angular para se tornar injetável em toda aplicação\n             * @example\n             * <pre>\n             * angular.module('myApp.module').controller('MyCtrl', function($login) {\n             *      console.log($login.templateUrl);\n             *      //prints the current templateUrl of `core.login`\n             *      //ex.: \"app/core/login/login.tpl.html\"\n             *      console.log($login.config('myOwnConfiguration'));\n             *      //prints the current config\n             *      //ex.: \"{ configA: 54, configB: '=D' }\"\n             * })\n             * </pre>\n             * @return {object} Retorna um objeto contendo valores das propriedades. ex: config e templateUrl\n             **/\n            this.$get = this.get = function() {\n                return {\n                    config: this._config,\n                    templateUrl: this._templateUrl,\n                    signupTemplateUrl: this._signupTemplateUrl\n                }\n            }\n            /**\n             * @ngdoc function\n             * @name core.login.$loginProvider#config\n             * @methodOf core.login.$loginProvider\n             * @description\n             * setter para configurações\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($loginProvider) {\n             *     $loginProvider.config('myOwnConfiguration', {\n             *          configA: 54,\n             *          configB: '=D'\n             *      })\n             *     $loginProvider.config('signupWelcome','Olá @firstName, você entrou para a @appName');\n             * })\n             * </pre>\n             * @param {string} key chave\n             * @param {*} val valor\n             **/\n            this.config = function(key, val) {\n                if (val) return this._config[key] = val;\n                else return this._config[key];\n            }\n            /**\n             * @ngdoc function\n             * @name core.login.$loginProvider#templateUrl\n             * @methodOf core.login.$loginProvider\n             * @description\n             * setter para url do template\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($loginProvider) {\n             *      $loginProvider.templateUrl('app/login/my-login.html')\n             * })\n             * </pre>\n             * @param {string} val url do template\n             **/\n            this.templateUrl = function(val) {\n                if (val) return this._templateUrl = val;\n                else return this._templateUrl;\n            }\n            /**\n             * @ngdoc function\n             * @name core.login.$loginProvider#lostTemplateUrl\n             * @methodOf core.login.$loginProvider\n             * @description\n             * setter para url do template para recuperação de senha\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($loginProvider) {\n             *      $loginProvider.lostTemplateUrl('app/login/my-login-lost.html')\n             * })\n             * </pre>\n             * @param {string} val url do template\n             **/\n            this.lostTemplateUrl = function(val) {\n                if (val) return this._lostTemplateUrl = val;\n                else return this._lostTemplateUrl;\n            }\n            /**\n             * @ngdoc function\n             * @name core.login.$loginProvider#signupTemplateUrl\n             * @methodOf core.login.$loginProvider\n             * @description\n             * setter para url do template de novos cadastros\n             * @example\n             * <pre>\n             * angular.module('myApp.module').config(function($loginProvider) {\n             *      $loginProvider.signupTemplateUrl('app/login/my-signup.html')\n             * })\n             * </pre>\n             * @param {string} val url do template\n             **/\n            this.signupTemplateUrl = function(val) {\n                if (val) return this._signupTemplateUrl = val;\n                else return this._signupTemplateUrl;\n            }\n        });\n})();\n'use strict';\n/**\n * @ngdoc directive\n * @name core.login.directive:login\n * @restrict EA\n * @description \n * Diretiva \"wrapper\" pro template de login\n * @element div\n **/\nangular.module('core.login').directive('login', /*@ngInject*/ function() {\n    return {\n        scope: {},\n        templateUrl: 'app/core/login/login.tpl.html',\n        controller: '$LoginCtrl',\n        controllerAs: 'vm',\n        restrict: 'EA'\n    }\n});\n(function() {\n    'use strict';\n    /**\n     * @ngdoc object\n     * @name core.login.controller:$LoginCtrl\n     * @requires core.login.$loginProvider\n     * @requires core.page.factory:$page\n     * @requires setting\n     * @requires api\n     **/\n    'use strict';\n    angular.module('core.login').controller('$LoginCtrl', /*@ngInject*/ function($rootScope, $scope, $state, $auth, $http, $mdToast, $location, $login, $page, setting, api) {\n        $page.title(setting.name + setting.titleSeparator + 'Login');\n        $page.description('Entre para o ' + setting.name);\n        $page.load.done();\n        var vm = this;\n        vm.config = $login.config;\n    })\n})();\n(function() {\n    'use strict';\n    angular.module('core.login').config( /*@ngInject*/ function($stateProvider, $urlRouterProvider, $locationProvider, $loginProvider) {\n        //\n        // States & Routes\n        //\n        $stateProvider.state('app.login', {\n            protected: false,\n            url: '/login/',\n            views: {\n                'content': {\n                    templateUrl: /*@ngInject*/ function() {\n                        return $loginProvider.templateUrl()\n                    },\n                    controller: '$LoginCtrl as vm'\n                }\n            },\n            resolve: {\n                authed: /*@ngInject*/ function($auth, $location, $login) {\n                    if ($auth.isAuthenticated()) {\n                        $location.path($login.config.auth.loginSuccessRedirect);\n                    }\n                }\n            }\n        }).state('app.logout', {\n            protected: false,\n            url: '/logout/',\n            views: {\n                'content': {\n                    controller: '$LogoutCtrl as vm'\n                }\n            }\n        }).state('app.signup', {\n            protected: false,\n            url: '/signup/',\n            views: {\n                'content': {\n                    templateUrl: /*@ngInject*/ function() {\n                        return $loginProvider.signupTemplateUrl()\n                    },\n                    controller: /*@ngInject*/ function($page, setting) {\n                        $page.title(setting.name + setting.titleSeparator + 'Cadastro');\n                    }\n                },\n                resolve: {\n                    authed: /*@ngInject*/ function($auth, $location, $login) {\n                        if ($auth.isAuthenticated()) {\n                            $location.path($login.config.auth.loginSuccessRedirect);\n                        }\n                    }\n                }\n            }\n        }).state('app.login-lost', {\n            protected: false,\n            url: '/login/lost/',\n            views: {\n                'content': {\n                    templateUrl: /*@ngInject*/ function() {\n                        return $loginProvider.lostTemplateUrl()\n                    },\n                    controller: '$LostCtrl as vm'\n                }\n            },\n            resolve: {\n                authed: /*@ngInject*/ function($auth, $window, $login) {\n                    if ($auth.isAuthenticated()) {\n                        $window.location = $login.config.auth.loginSuccessRedirect //here we use $window to fix issue related with $location.hash (#) in url\n                    }\n                }\n            }\n        });\n        $locationProvider.html5Mode(true);\n    })\n})();\n(function() {\n    angular.module(\"app.setting\", []).constant(\"setting\", {\n        name: \"app kit\",\n        slug: \"app-kit\",\n        version: \"0.0.1\",\n        title: \"app kit\",\n        baseUrl: \"\",\n        titleSeparator: \" — \",\n        description: \"app-kit\",\n        copyright: \"app-kit\",\n        google: {\n            clientId: \"\",\n            language: \"pt-BR\"\n        },\n        facebook: {\n            scope: \"email\",\n            appId: \"\",\n            appSecret: \"\",\n            language: \"pt-BR\"\n        },\n        https: [],\n        redirWww: false,\n        ogLocale: \"pt_BR\",\n        ogSiteName: \"app-kit\",\n        ogTitle: \"app-kit\",\n        ogDescription: \"app-kit\",\n        ogUrl: \"\",\n        ogImage: \"\",\n        ogSection: \"app-kit\",\n        ogTag: \"app-kit\"\n    });\n})();\n(function() {\n    'use strict';\n    angular.module('mtdaDe', [\n        'core.app'\n        // 'account.module',\n        // 'ngAnimate',\n        // 'ngCookies',\n        // 'ngTouch',\n        // 'ngSanitize',\n        // 'ngMessages',\n        // 'ngAria',\n        // 'ui.router',\n        // 'ngMaterial',\n        // 'toastr',\n\n    ]);\n})();\nangular.module(\"mtdaDe\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/layout/layout.tpl.html\",\"<loader></loader><md-content layout=\\\"column\\\" class=\\\"home\\\"><header><acme-navbar></acme-navbar></header><div class=\\\"hero\\\"><div class=\\\"wrapper\\\"><h1>Desenvolvedor WEB e especialista em SEO</h1><p>Matheus Davidson tem 10 anos de experiência de mercado no Brasil e Inglaterra, apaixonado por tecnologia, está sempre antenado nas novidades da internet!</p><div class=\\\"hero-action\\\"><md-button class=\\\"md-raised\\\">Perfil</md-button><md-button class=\\\"md-raised\\\">Cases</md-button></div></div><div class=\\\"hero-mkt\\\"><div class=\\\"wrapper\\\"><p class=\\\"md-small-headline\\\">Pensando em desenvolver um site, e-commerce ou aplicação? Posso te ajudar, <a href=\\\"#\\\">entre em contato.</a></p></div></div></div><div class=\\\"wrapper techs-wrapper\\\"><h2 class=\\\"intro-title md-display-2 text-primary text-dark\\\">Tecnologia utilizada recentemente</h2><p class=\\\"intro-desc\\\">A tecnologia utilizada em cada aplicação vai depender do caso de uso, mas trabalho preferencialmente com a MEAN stack, uma full-stack javascript que da agilidade e qualidade ao processo de desenvolvimento.</p><br><div class=\\\"techs\\\" layout-align-gt-sm=\\\"space-between\\\" layout-align-sm=\\\"center\\\"><div class=\\\"item\\\" ng-repeat=\\\"item in main.techs\\\"><img ng-src=\\\"assets/images/{{ item.logo }}\\\" alt=\\\"{{ item.title }}\\\"><h3 class=\\\"md-title text-primary\\\">{{ item.title }}</h3><p>{{ item.desc }}</p></div></div><br></div><div class=\\\"cur-project\\\"><div class=\\\"wrapper\\\"><h2 class=\\\"md-headline\\\">Projeto que estou trabalhando no momento</h2><p class=\\\"md-body-2\\\"><span class=\\\"client\\\">Fiorebella</span><br>Desenvolvimento de e-commerce para vendas de flores e cestas de café da manhã no espírito santo.</p><br><img class=\\\"pro-image\\\" src=\\\"assets/images/iphone.png\\\" alt=\\\"\\\"></div></div><footer><div class=\\\"wrapper\\\" layout=\\\"row\\\" layout-align=\\\"start end\\\"><div class=\\\"copyright\\\" layout=\\\"row\\\" layout-align=\\\"start end\\\" flex=\\\"\\\"><img class=\\\"logo\\\" src=\\\"assets/images/logo.png\\\" alt=\\\"\\\"> <span class=\\\"md-body-2\\\">© 2005 - 2015</span></div><div class=\\\"social\\\" layout=\\\"row\\\" layout-align=\\\"end end\\\" flex=\\\"\\\"><a href=\\\"https://www.facebook.com/matheusdavidson\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-facebook-official\\\"></i><md-tooltip>Ir para o facebook</md-tooltip></a> <a href=\\\"https://plus.google.com/+MatheusAndradeD\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-google-plus-square\\\"></i><md-tooltip>Ir para o google+</md-tooltip></a> <a href=\\\"https://twitter.com/mtdade\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-twitter-square\\\"></i><md-tooltip>Ir para o twitter</md-tooltip></a> <a href=\\\"https://github.com/matheusdavidson\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-github-square\\\"></i><md-tooltip>Ir para o github</md-tooltip></a></div></div></footer></md-content>\");\n$templateCache.put(\"app/login/login.tpl.html\",\"<md-content class=\\\"md-padding anim-zoom-in login\\\" layout=\\\"row\\\" layout-sm=\\\"column\\\" ng-if=\\\"!app.isAuthed()\\\" flex=\\\"\\\"><div layout=\\\"column\\\" class=\\\"login\\\" layout-padding=\\\"\\\" flex=\\\"\\\"><login-form config=\\\"vm.config\\\" user=\\\"app.user\\\"></login-form></div></md-content>\");\n$templateCache.put(\"app/main/main.html\",\"<md-content layout=\\\"column\\\" class=\\\"home\\\"><header><acme-navbar></acme-navbar></header><div class=\\\"hero\\\"><div class=\\\"wrapper\\\"><h1>Desenvolvedor WEB e especialista em SEO</h1><p>Matheus Davidson tem 10 anos de experiência de mercado no Brasil e Inglaterra, apaixonado por tecnologia, está sempre antenado nas novidades da internet!</p><div class=\\\"hero-action\\\"><md-button class=\\\"md-raised\\\">Perfil</md-button><md-button class=\\\"md-raised\\\">Cases</md-button></div></div><div class=\\\"hero-mkt\\\"><div class=\\\"wrapper\\\"><p class=\\\"md-small-headline\\\">Pensando em desenvolver um site, e-commerce ou aplicação? Posso te ajudar, <a href=\\\"#\\\">entre em contato.</a></p></div></div></div><div class=\\\"wrapper techs-wrapper\\\"><h2 class=\\\"intro-title md-display-2 text-primary text-dark\\\">Tecnologia utilizada recentemente</h2><p class=\\\"intro-desc\\\">A tecnologia utilizada em cada aplicação vai depender do caso de uso, mas trabalho preferencialmente com a MEAN stack, uma full-stack javascript que da agilidade e qualidade ao processo de desenvolvimento.</p><br><div class=\\\"techs\\\" layout-align-gt-sm=\\\"space-between\\\" layout-align-sm=\\\"center\\\"><div class=\\\"item\\\" ng-repeat=\\\"item in main.techs\\\"><img ng-src=\\\"assets/images/{{ item.logo }}\\\" alt=\\\"{{ item.title }}\\\"><h3 class=\\\"md-title text-primary\\\">{{ item.title }}</h3><p>{{ item.desc }}</p></div></div><br></div><div class=\\\"cur-project\\\"><div class=\\\"wrapper\\\"><h2 class=\\\"md-headline\\\">Projeto que estou trabalhando no momento</h2><p class=\\\"md-body-2\\\"><span class=\\\"client\\\">Fiorebella</span><br>Desenvolvimento de e-commerce para vendas de flores e cestas de café da manhã no espírito santo.</p><br><img class=\\\"pro-image\\\" src=\\\"assets/images/iphone.png\\\" alt=\\\"\\\"></div></div><footer><div class=\\\"wrapper\\\" layout=\\\"row\\\" layout-align=\\\"start end\\\"><div class=\\\"copyright\\\" layout=\\\"row\\\" layout-align=\\\"start end\\\" flex=\\\"\\\"><img class=\\\"logo\\\" src=\\\"assets/images/logo.png\\\" alt=\\\"\\\"> <span class=\\\"md-body-2\\\">© 2005 - 2015</span></div><div class=\\\"social\\\" layout=\\\"row\\\" layout-align=\\\"end end\\\" flex=\\\"\\\"><a href=\\\"https://www.facebook.com/matheusdavidson\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-facebook-official\\\"></i><md-tooltip>Ir para o facebook</md-tooltip></a> <a href=\\\"https://plus.google.com/+MatheusAndradeD\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-google-plus-square\\\"></i><md-tooltip>Ir para o google+</md-tooltip></a> <a href=\\\"https://twitter.com/mtdade\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-twitter-square\\\"></i><md-tooltip>Ir para o twitter</md-tooltip></a> <a href=\\\"https://github.com/matheusdavidson\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-github-square\\\"></i><md-tooltip>Ir para o github</md-tooltip></a></div></div></footer></md-content>\");\n$templateCache.put(\"app/core/menu/menuLink.tpl.html\",\"<md-button ng-class=\\\"{\\'active\\' : isSelected()||vm.state.current.name === section.state}\\\" ng-href=\\\"{{section.url}}\\\"><i ng-if=\\\"section.icon\\\" class=\\\"{{section.icon}}\\\"></i><md-icon ng-if=\\\"section.iconMi\\\" md-font-set=\\\"material-icons\\\">{{section.iconMi}}</md-icon><span>{{section | menuHuman }}</span></md-button>\");\n$templateCache.put(\"app/core/menu/menuToggle.tpl.html\",\"<md-button class=\\\"md-button-toggle\\\" ng-click=\\\"toggle()\\\" aria-controls=\\\"app-menu-{{section.name | nospace}}\\\" flex=\\\"\\\" layout=\\\"row\\\" aria-expanded=\\\"{{isOpen()}}\\\"><i ng-if=\\\"section.icon\\\" class=\\\"{{section.icon}}\\\"></i> <span class=\\\"title\\\">{{section.name}}</span> <span aria-hidden=\\\"true\\\" class=\\\"md-toggle-icon\\\" ng-class=\\\"{\\'toggled\\' : isOpen()}\\\"></span></md-button><ul ng-show=\\\"isOpen()\\\" id=\\\"app-menu-{{section.name | nospace}}\\\" class=\\\"menu-toggle-list\\\"><li ng-repeat=\\\"page in section.pages\\\"><div layout=\\\"row\\\"><menu-link section=\\\"page\\\" flex=\\\"\\\"></menu-link><md-button flex=\\\"25\\\" ng-click=\\\"cart.add(page._)\\\" aria-label=\\\"adicione {{page.name}} ao carrinho\\\" title=\\\"adicione {{page.name}} ao carrinho\\\" ng-if=\\\"section.product\\\"><i class=\\\"fa fa-cart-plus\\\"></i></md-button></div></li></ul>\");\n$templateCache.put(\"app/core/menu/sidenav.tpl.html\",\"<div layout=\\\"column\\\"><menu-facepile ng-if=\\\"app.user.current(\\'company\\').facebook && (app.state.current.name!=\\'app.home\\' && app.state.current.name!=\\'app.account\\') && app.enviroment !== \\'development\\' && !app.iframe\\\" hide-sm=\\\"\\\" width=\\\"304\\\" url=\\\"https://www.facebook.com/{{app.user.current(\\'company\\').facebook}}\\\" facepile=\\\"true\\\" hide-cover=\\\"false\\\" ng-hide=\\\"app.state.current.name===\\'app.pages\\'\\\"></menu-facepile><menu-avatar first-name=\\\"app.user.profile.firstName\\\" last-name=\\\"app.user.profile.lastName\\\" gender=\\\"app.user.profile.gender\\\" facebook=\\\"app.user.facebook\\\"></menu-avatar><div flex=\\\"\\\"><ul class=\\\"app-menu\\\"><li ng-repeat=\\\"section in app.menu.sections\\\" class=\\\"parent-list-item\\\" ng-class=\\\"{\\'parentActive\\' : app.menu.isSectionSelected(section)}\\\"><h2 class=\\\"menu-heading\\\" ng-if=\\\"section.type === \\'heading\\'\\\" id=\\\"heading_{{ section.name | nospace }}\\\" layout=\\\"row\\\"><i ng-if=\\\"section.icon\\\" class=\\\"{{section.icon}}\\\"></i><md-icon ng-if=\\\"section.iconMi\\\" md-font-set=\\\"material-icons\\\">{{section.icon}}</md-icon><my-svg-icon ng-if=\\\"section.iconSvg\\\" class=\\\"ic_24px\\\" icon=\\\"{{section.iconSvg}}\\\"></my-svg-icon><span>{{section.name}}</span></h2><menu-link section=\\\"section\\\" ng-if=\\\"section.type === \\'link\\'\\\"></menu-link><menu-toggle section=\\\"section\\\" ng-if=\\\"section.type === \\'toggle\\'\\\"></menu-toggle><ul ng-if=\\\"section.children\\\" class=\\\"menu-nested-list\\\"><li ng-repeat=\\\"child in section.children\\\" ng-class=\\\"{\\'childActive\\' : app.menu.isChildSectionSelected(child)}\\\"><menu-toggle section=\\\"child\\\"></menu-toggle></li></ul></li><li><a class=\\\"md-button md-default-theme\\\" ng-click=\\\"app.logout()\\\"><i class=\\\"fa fa-power-off\\\"></i> <span class=\\\"title\\\">Sair</span></a></li></ul></div><div layout=\\\"column\\\" layout-align=\\\"center center\\\" class=\\\"page-footer text-center\\\"><md-content flex=\\\"\\\" class=\\\"main-wrapper\\\"><div class=\\\"copyright\\\"><strong>{{ app.setting.copyright }} © {{ app.year }}</strong></div><div class=\\\"terms\\\"><a ui-sref=\\\"app.pages({slug:\\'privacy\\'})\\\">Política de Privacidade</a> - <a ui-sref=\\\"app.pages({slug:\\'terms\\'})\\\">Termos de Serviço</a></div></md-content></div></div>\");\n$templateCache.put(\"app/login/facebook/facebookLogin.tpl.html\",\"<button flex=\\\"\\\" ng-click=\\\"fb.login()\\\" ng-disabled=\\\"app.$page.load.status\\\" layout=\\\"row\\\"><i class=\\\"fa fa-facebook\\\"></i> <span>Entrar com Facebook</span></button>\");\n$templateCache.put(\"app/login/form/loginForm.tpl.html\",\"<div class=\\\"wrapper md-whiteframe-z1\\\"><img class=\\\"avatar\\\" src=\\\"assets/images/avatar-m.jpg\\\"><md-content class=\\\"md-padding\\\"><form name=\\\"logon\\\" novalidate=\\\"\\\"><div layout=\\\"row\\\" class=\\\"email\\\"><i class=\\\"fa fa-at\\\"></i><md-input-container flex=\\\"\\\"><label>Email</label> <input ng-model=\\\"logon.email\\\" type=\\\"email\\\" required=\\\"\\\"></md-input-container></div><div layout=\\\"row\\\" class=\\\"senha\\\"><i class=\\\"fa fa-key\\\"></i><md-input-container flex=\\\"\\\"><label>Senha</label> <input ng-model=\\\"logon.password\\\" type=\\\"password\\\" required=\\\"\\\"></md-input-container></div></form></md-content><div layout=\\\"row\\\" layout-padding=\\\"\\\"><button flex=\\\"\\\" class=\\\"entrar\\\" ng-click=\\\"vm.login(logon)\\\" ng-disabled=\\\"logon.$invalid||app.$page.load.status\\\">Entrar</button><facebook-login user=\\\"user\\\"></facebook-login></div></div><div class=\\\"help\\\" layout=\\\"row\\\"><a flex=\\\"\\\" ui-sref=\\\"app.login-lost\\\" class=\\\"lost\\\"><i class=\\\"fa fa-support\\\"></i> Esqueci minha senha</a> <a flex=\\\"\\\" ui-sref=\\\"app.signup\\\" class=\\\"lost\\\"><i class=\\\"fa fa-support\\\"></i> Não tenho cadastro</a></div><style>\\nbody, html {  overflow: auto;}\\n</style>\");\n$templateCache.put(\"app/login/google/googleLogin.tpl.html\",\"<google-plus-signin clientid=\\\"{{google.clientId}}\\\" language=\\\"{{google.language}}\\\"><button class=\\\"google\\\" layout=\\\"row\\\" ng-disabled=\\\"app.$page.load.status\\\"><i class=\\\"fa fa-google-plus\\\"></i> <span>Entrar com Google</span></button></google-plus-signin>\");\n$templateCache.put(\"app/login/register/lost.tpl.html\",\"<div layout=\\\"row\\\" class=\\\"login-lost\\\" ng-if=\\\"!app.isAuthed()\\\"><div layout=\\\"column\\\" class=\\\"login\\\" flex=\\\"\\\" ng-if=\\\"!vm.userHash\\\"><div class=\\\"wrapper md-whiteframe-z1\\\"><img class=\\\"avatar\\\" src=\\\"assets/images/avatar-m.jpg\\\"><md-content class=\\\"md-padding\\\"><form name=\\\"lost\\\" novalidate=\\\"\\\"><div layout=\\\"row\\\" class=\\\"email\\\"><i class=\\\"fa fa-at\\\"></i><md-input-container flex=\\\"\\\"><label>Email</label> <input ng-model=\\\"email\\\" type=\\\"email\\\" required=\\\"\\\"></md-input-container></div></form></md-content><md-button class=\\\"md-primary md-raised entrar\\\" ng-disabled=\\\"lost.$invalid||app.$page.load.status\\\" ng-click=\\\"!lost.$invalid?vm.lost(email):false\\\">Recuperar</md-button></div></div><div layout=\\\"column\\\" class=\\\"login\\\" flex=\\\"\\\" ng-if=\\\"vm.userHash\\\"><div class=\\\"wrapper md-whiteframe-z1\\\"><img class=\\\"avatar\\\" src=\\\"assets/images/avatar-m.jpg\\\"><h4 class=\\\"text-center\\\">Entre com sua nova senha</h4><md-content class=\\\"md-padding\\\"><form name=\\\"lost\\\" novalidate=\\\"\\\"><div layout=\\\"row\\\" class=\\\"email\\\"><i class=\\\"fa fa-key\\\"></i><md-input-container flex=\\\"\\\"><label>Senha</label> <input ng-model=\\\"senha\\\" type=\\\"password\\\" required=\\\"\\\"></md-input-container></div><div layout=\\\"row\\\" class=\\\"email\\\"><i class=\\\"fa fa-key\\\"></i><md-input-container flex=\\\"\\\"><label>Repetir senha</label> <input ng-model=\\\"senhaConfirm\\\" name=\\\"senhaConfirm\\\" type=\\\"password\\\" match=\\\"senha\\\" required=\\\"\\\"></md-input-container></div></form></md-content><md-button class=\\\"md-primary md-raised entrar\\\" ng-disabled=\\\"lost.$invalid||app.$page.load.status\\\" ng-click=\\\"!lost.$invalid?vm.change(senha):false\\\">Alterar</md-button></div><div ng-show=\\\"lost.senhaConfirm.$error.match\\\" class=\\\"warn\\\"><span>(!) As senhas não conferem</span></div></div></div><style>\\nbody, html {  overflow: auto;}\\n</style>\");\n$templateCache.put(\"app/login/register/register.tpl.html\",\"<md-content class=\\\"md-padding anim-zoom-in login\\\" layout=\\\"row\\\" layout-sm=\\\"column\\\" ng-if=\\\"!app.isAuthed()\\\" flex=\\\"\\\"><div layout=\\\"column\\\" class=\\\"register\\\" layout-padding=\\\"\\\" flex=\\\"\\\"><register-form config=\\\"vm.config\\\"></register-form></div></md-content>\");\n$templateCache.put(\"app/login/register/registerForm.tpl.html\",\"<div class=\\\"wrapper md-whiteframe-z1\\\"><img class=\\\"avatar\\\" src=\\\"assets/images/avatar-m.jpg\\\"><md-content><form name=\\\"registerForm\\\" novalidate=\\\"\\\"><div layout=\\\"row\\\" layout-sm=\\\"column\\\" class=\\\"nome\\\"><i hide-sm=\\\"\\\" class=\\\"fa fa-smile-o\\\"></i><md-input-container flex=\\\"\\\"><label>Seu nome</label> <input ng-model=\\\"sign.firstName\\\" type=\\\"text\\\" required=\\\"\\\"></md-input-container><md-input-container flex=\\\"\\\"><label>Sobrenome</label> <input ng-model=\\\"sign.lastName\\\" type=\\\"text\\\" required=\\\"\\\"></md-input-container></div><div layout=\\\"row\\\" class=\\\"email\\\"><i class=\\\"fa fa-at\\\"></i><md-input-container flex=\\\"\\\"><label>Email</label> <input ng-model=\\\"sign.email\\\" type=\\\"email\\\" required=\\\"\\\"></md-input-container></div><div layout=\\\"row\\\" class=\\\"senha\\\"><i class=\\\"fa fa-key\\\"></i><md-input-container flex=\\\"\\\"><label>Senha</label> <input ng-model=\\\"sign.password\\\" type=\\\"password\\\" required=\\\"\\\"></md-input-container></div></form><div layout=\\\"row\\\" layout-padding=\\\"\\\"><button flex=\\\"\\\" class=\\\"entrar\\\" ng-disabled=\\\"registerForm.$invalid||app.$page.load.status\\\" ng-click=\\\"register(sign)\\\">Registrar</button><facebook-login user=\\\"user\\\"></facebook-login></div></md-content></div><div layout=\\\"column\\\"><a flex=\\\"\\\" class=\\\"lost\\\" ui-sref=\\\"app.pages({slug:\\'terms\\'})\\\"><i class=\\\"fa fa-warning\\\"></i> Concordo com os termos</a></div><style>\\nbody, html {  overflow: auto;}\\n</style>\");\n$templateCache.put(\"app/core/page/loader/loader.tpl.html\",\"<div class=\\\"page-loader\\\" ng-class=\\\"{\\'show\\':app.$page.load.status}\\\"><md-progress-linear md-mode=\\\"indeterminate\\\"></md-progress-linear></div>\");\n$templateCache.put(\"app/core/page/toolbar/toolbar.tpl.html\",\"<div class=\\\"md-toolbar-tools\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><div hide=\\\"\\\" show-sm=\\\"\\\" show-md=\\\"\\\" layout=\\\"row\\\"><a ng-click=\\\"app.menu.open()\\\" ng-if=\\\"app.isAuthed()\\\" aria-label=\\\"menu\\\"><md-icon md-svg-src=\\\"assets/images/icons/ic_menu_24px.svg\\\"></md-icon></a><toolbar-title hide-sm=\\\"\\\" hide-md=\\\"\\\"></toolbar-title></div><toolbar-title hide=\\\"\\\" show-gt-md=\\\"\\\"></toolbar-title><div layout=\\\"row\\\" ng-if=\\\"app.state.current.name != \\'app.home\\'\\\"><ul class=\\\"top-menu\\\"><li></li></ul><toolbar-menu ng-if=\\\"app.isAuthed()\\\"></toolbar-menu><a ui-sref=\\\"app.home\\\"><img hide=\\\"\\\" show-sm=\\\"\\\" show-md=\\\"\\\" class=\\\"logo-header\\\" ng-src=\\\"{{app.logoWhite}}\\\"></a></div></div>\");\n$templateCache.put(\"app/core/page/toolbar/menu/toolbarMenu.tpl.html\",\"<ul class=\\\"top-menu\\\"><li ng-repeat=\\\"item in menu\\\"><a id=\\\"{{item.id}}\\\" title=\\\"{{item.name}}\\\"><i class=\\\"{{item.icon}}\\\"></i></a></li></ul>\");\n$templateCache.put(\"app/core/page/toolbar/title/toolbarTitle.tpl.html\",\"<div class=\\\"logo-company\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\"><a href=\\\"/\\\"><img class=\\\"logo-header\\\" ng-src=\\\"{{app.logoWhite}}\\\"></a></div>\");}]);"],"sourceRoot":"/source/"}